

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb 22 16:15:41 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.05
    17                           ; Generated 20/12/2018 GMT
    18                           ; 
    19                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  0014                     _SSPCON	set	20
   363  000B                     _INTCONbits	set	11
   364  001F                     _ADCON0bits	set	31
   365  001E                     _ADRESH	set	30
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCONbits	set	20
   368  000C                     _PIR1bits	set	12
   369  0063                     _SSPIF	set	99
   370  005E                     _PEIE	set	94
   371  005F                     _GIE	set	95
   372  0066                     _ADIF	set	102
   373  0091                     _SSPCON2bits	set	145
   374  0087                     _TRISCbits	set	135
   375  0094                     _SSPSTAT	set	148
   376  0093                     _SSPADD	set	147
   377  0091                     _SSPCON2	set	145
   378  009E                     _ADRESL	set	158
   379  008C                     _PIE1bits	set	140
   380  0089                     _TRISEbits	set	137
   381  0085                     _TRISAbits	set	133
   382  009F                     _ADCON1bits	set	159
   383  0094                     _SSPSTATbits	set	148
   384  0463                     _SSPIE	set	1123
   385  043C                     _TRISC4	set	1084
   386  043B                     _TRISC3	set	1083
   387  04A0                     _BF	set	1184
   388  0466                     _ADIE	set	1126
   389  0188                     _ANSELbits	set	392
   390                           
   391                           ; #config settings
   392  0000                     
   393                           	psect	cinit
   394  000F                     start_initialization:	
   395  000F                     __initialization:	
   396                           
   397                           ; Clear objects allocated to COMMON
   398  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   399  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   400  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   401  0012                     end_of_initialization:	
   402                           ;End of C runtime variable initialization code
   403                           
   404  0012                     __end_of__initialization:	
   405  0012  0183               	clrf	3
   406  0013  120A  118A  291F   	ljmp	_main	;jump to C main() function
   407                           
   408                           	psect	bssCOMMON
   409  0078                     __pbssCOMMON:	
   410  0078                     _z:	
   411  0078                     	ds	1
   412  0079                     _banderaADC:	
   413  0079                     	ds	1
   414  007A                     _valorADC:	
   415  007A                     	ds	1
   416                           
   417                           	psect	cstackCOMMON
   418  0070                     __pcstackCOMMON:	
   419  0070                     ?_ADCinit:	
   420  0070                     ?_I2C_Slave_Init:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_ISR:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ??_ISR:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_main:	
   430                           ; 1 bytes @ 0x0
   431                           
   432                           
   433                           ; 1 bytes @ 0x0
   434  0070                     	ds	3
   435  0073                     ?_ADConfig:	
   436  0073                     ??_ADCinit:	
   437                           ; 1 bytes @ 0x3
   438                           
   439  0073                     ??_I2C_Slave_Init:	
   440                           ; 1 bytes @ 0x3
   441                           
   442  0073                     ADConfig@canal:	
   443                           ; 1 bytes @ 0x3
   444                           
   445  0073                     I2C_Slave_Init@address:	
   446                           ; 1 bytes @ 0x3
   447                           
   448                           
   449                           ; 1 bytes @ 0x3
   450  0073                     	ds	1
   451  0074                     ADConfig@justificado:	
   452                           
   453                           ; 1 bytes @ 0x4
   454  0074                     	ds	1
   455  0075                     ??_ADConfig:	
   456                           
   457                           ; 1 bytes @ 0x5
   458  0075                     	ds	2
   459  0077                     ADConfig@oscFreq:	
   460                           
   461                           ; 1 bytes @ 0x7
   462  0077                     	ds	1
   463                           
   464                           	psect	cstackBANK0
   465  0020                     __pcstackBANK0:	
   466  0020                     ??_main:	
   467                           
   468                           ; 1 bytes @ 0x0
   469  0020                     	ds	2
   470                           
   471                           	psect	maintext
   472  011F                     __pmaintext:	
   473 ;;
   474 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   475 ;;
   476 ;; *************** function _main *****************
   477 ;; Defined at:
   478 ;;		line 76 in file "Slave1_main.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : B00/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   492 ;;      Params:         0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0
   494 ;;      Temps:          0       2       0       0       0
   495 ;;      Totals:         0       2       0       0       0
   496 ;;Total ram usage:        2 bytes
   497 ;; Hardware stack levels required when called:    2
   498 ;; This function calls:
   499 ;;		_ADCinit
   500 ;;		_ADConfig
   501 ;;		_I2C_Slave_Init
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _main
   509  011F                     _main:	
   510                           
   511                           ;Slave1_main.c: 77:     ADConfig(4, 7, 'H');
   512                           
   513                           ;incstack = 0
   514                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   515  011F  3007               	movlw	7
   516  0120  1283               	bcf	3,5	;RP0=0, select bank0
   517  0121  1303               	bcf	3,6	;RP1=0, select bank0
   518  0122  00A0               	movwf	??_main
   519  0123  0820               	movf	??_main,w
   520  0124  00F3               	movwf	ADConfig@canal
   521  0125  3048               	movlw	72
   522  0126  00A1               	movwf	??_main+1
   523  0127  0821               	movf	??_main+1,w
   524  0128  00F4               	movwf	ADConfig@justificado
   525  0129  3004               	movlw	4
   526  012A  120A  118A  2016  120A  118A  	fcall	_ADConfig
   527                           
   528                           ;Slave1_main.c: 78:     ADCinit();
   529  012F  120A  118A  2166  120A  118A  	fcall	_ADCinit
   530                           
   531                           ;Slave1_main.c: 80:     I2C_Slave_Init(0x60);
   532  0134  3060               	movlw	96
   533  0135  120A  118A  214C  120A  118A  	fcall	_I2C_Slave_Init
   534  013A                     l1172:	
   535                           
   536                           ;Slave1_main.c: 83:         if(banderaADC == 1){
   537  013A  0379               	decf	_banderaADC,w
   538  013B  1D03               	btfss	3,2
   539  013C  293A               	goto	l1172
   540                           
   541                           ;Slave1_main.c: 84:             valorADC = ADRESH;
   542  013D  1283               	bcf	3,5	;RP0=0, select bank0
   543  013E  1303               	bcf	3,6	;RP1=0, select bank0
   544  013F  081E               	movf	30,w	;volatile
   545  0140  00A0               	movwf	??_main
   546  0141  0820               	movf	??_main,w
   547  0142  00FA               	movwf	_valorADC
   548                           
   549                           ;Slave1_main.c: 85:             ADIF = 0;
   550  0143  130C               	bcf	12,6	;volatile
   551                           
   552                           ;Slave1_main.c: 86:             banderaADC = 0;
   553  0144  01F9               	clrf	_banderaADC
   554                           
   555                           ;Slave1_main.c: 87:             ADIE = 1;
   556  0145  1683               	bsf	3,5	;RP0=1, select bank1
   557  0146  1303               	bcf	3,6	;RP1=0, select bank1
   558  0147  170C               	bsf	12,6	;volatile
   559                           
   560                           ;Slave1_main.c: 88:             ADCON0bits.GO_nDONE = 1;
   561  0148  1283               	bcf	3,5	;RP0=0, select bank0
   562  0149  1303               	bcf	3,6	;RP1=0, select bank0
   563  014A  149F               	bsf	31,1	;volatile
   564  014B  293A               	goto	l1172
   565  014C                     __end_of_main:	
   566                           
   567                           	psect	text1
   568  014C                     __ptext1:	
   569 ;; *************** function _I2C_Slave_Init *****************
   570 ;; Defined at:
   571 ;;		line 93 in file "I2C.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;  address         1    wreg     unsigned char 
   574 ;; Auto vars:     Size  Location     Type
   575 ;;  address         1    3[COMMON] unsigned char 
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   585 ;;      Params:         0       0       0       0       0
   586 ;;      Locals:         1       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0
   588 ;;      Totals:         1       0       0       0       0
   589 ;;Total ram usage:        1 bytes
   590 ;; Hardware stack levels used:    1
   591 ;; Hardware stack levels required when called:    1
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           
   600                           ;psect for function _I2C_Slave_Init
   601  014C                     _I2C_Slave_Init:	
   602                           
   603                           ;incstack = 0
   604                           ; Regs used in _I2C_Slave_Init: [wreg]
   605                           ;I2C_Slave_Init@address stored from wreg
   606  014C  00F3               	movwf	I2C_Slave_Init@address
   607                           
   608                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   609  014D  0873               	movf	I2C_Slave_Init@address,w
   610  014E  1683               	bsf	3,5	;RP0=1, select bank1
   611  014F  1303               	bcf	3,6	;RP1=0, select bank1
   612  0150  0093               	movwf	19	;volatile
   613                           
   614                           ;I2C.c: 96:     SSPCON = 0x36;
   615  0151  3036               	movlw	54
   616  0152  1283               	bcf	3,5	;RP0=0, select bank0
   617  0153  1303               	bcf	3,6	;RP1=0, select bank0
   618  0154  0094               	movwf	20	;volatile
   619                           
   620                           ;I2C.c: 97:     SSPSTAT = 0x80;
   621  0155  3080               	movlw	128
   622  0156  1683               	bsf	3,5	;RP0=1, select bank1
   623  0157  1303               	bcf	3,6	;RP1=0, select bank1
   624  0158  0094               	movwf	20	;volatile
   625                           
   626                           ;I2C.c: 98:     SSPCON2 = 0x01;
   627  0159  3001               	movlw	1
   628  015A  0091               	movwf	17	;volatile
   629                           
   630                           ;I2C.c: 99:     TRISC3 = 1;
   631  015B  1587               	bsf	7,3	;volatile
   632                           
   633                           ;I2C.c: 100:     TRISC4 = 1;
   634  015C  1607               	bsf	7,4	;volatile
   635                           
   636                           ;I2C.c: 101:     GIE = 1;
   637  015D  178B               	bsf	11,7	;volatile
   638                           
   639                           ;I2C.c: 102:     PEIE = 1;
   640  015E  170B               	bsf	11,6	;volatile
   641                           
   642                           ;I2C.c: 103:     SSPIF = 0;
   643  015F  1283               	bcf	3,5	;RP0=0, select bank0
   644  0160  1303               	bcf	3,6	;RP1=0, select bank0
   645  0161  118C               	bcf	12,3	;volatile
   646                           
   647                           ;I2C.c: 104:     SSPIE = 1;
   648  0162  1683               	bsf	3,5	;RP0=1, select bank1
   649  0163  1303               	bcf	3,6	;RP1=0, select bank1
   650  0164  158C               	bsf	12,3	;volatile
   651  0165  0008               	return
   652  0166                     __end_of_I2C_Slave_Init:	
   653                           
   654                           	psect	text2
   655  0016                     __ptext2:	
   656 ;; *************** function _ADConfig *****************
   657 ;; Defined at:
   658 ;;		line 15 in file "ADC.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;  oscFreq         1    wreg     unsigned char 
   661 ;;  canal           1    3[COMMON] unsigned char 
   662 ;;  justificado     1    4[COMMON] unsigned char 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  oscFreq         1    7[COMMON] unsigned char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         2       0       0       0       0
   675 ;;      Locals:         1       0       0       0       0
   676 ;;      Temps:          2       0       0       0       0
   677 ;;      Totals:         5       0       0       0       0
   678 ;;Total ram usage:        5 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; Hardware stack levels required when called:    1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_main
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           
   689                           ;psect for function _ADConfig
   690  0016                     _ADConfig:	
   691                           
   692                           ;incstack = 0
   693                           ; Regs used in _ADConfig: [wreg-fsr0h+status,2+status,0]
   694                           ;ADConfig@oscFreq stored from wreg
   695  0016  00F7               	movwf	ADConfig@oscFreq
   696                           
   697                           ;ADC.c: 16:     switch(oscFreq){
   698  0017  2830               	goto	l1048
   699  0018                     l1038:	
   700                           
   701                           ;ADC.c: 18:             ADCON0bits.ADCS = 0b00;
   702  0018  303F               	movlw	-193
   703  0019  1283               	bcf	3,5	;RP0=0, select bank0
   704  001A  1303               	bcf	3,6	;RP1=0, select bank0
   705  001B  059F               	andwf	31,f	;volatile
   706                           
   707                           ;ADC.c: 19:             break;
   708  001C  284F               	goto	l1050
   709  001D                     l1040:	
   710  001D  2829               	goto	l1046
   711  001E                     l1042:	
   712                           ;ADC.c: 22:             break;
   713                           
   714                           ;ADC.c: 21:             ADCON0bits.ADCS = 0b01;
   715                           
   716                           
   717                           ;ADC.c: 24:             ADCON0bits.ADCS = 0b10;
   718  001E  1283               	bcf	3,5	;RP0=0, select bank0
   719  001F  1303               	bcf	3,6	;RP1=0, select bank0
   720  0020  081F               	movf	31,w	;volatile
   721  0021  393F               	andlw	-193
   722  0022  3880               	iorlw	128
   723  0023  282E               	goto	L2
   724  0024                     l1044:	
   725                           ;ADC.c: 25:             break;
   726                           
   727                           
   728                           ;ADC.c: 27:             ADCON0bits.ADCS = 0b11;
   729  0024  30C0               	movlw	192
   730  0025  1283               	bcf	3,5	;RP0=0, select bank0
   731  0026  1303               	bcf	3,6	;RP1=0, select bank0
   732  0027  049F               	iorwf	31,f	;volatile
   733                           
   734                           ;ADC.c: 28:             break;
   735  0028  284F               	goto	l1050
   736  0029                     l1046:	
   737                           
   738                           ;ADC.c: 30:             ADCON0bits.ADCS = 0b01;
   739  0029  1283               	bcf	3,5	;RP0=0, select bank0
   740  002A  1303               	bcf	3,6	;RP1=0, select bank0
   741  002B  081F               	movf	31,w	;volatile
   742  002C  393F               	andlw	-193
   743  002D  3840               	iorlw	64
   744  002E                     L2:	
   745  002E  009F               	movwf	31	;volatile
   746                           
   747                           ;ADC.c: 31:     }
   748  002F  284F               	goto	l1050
   749  0030                     l1048:	
   750  0030  0877               	movf	ADConfig@oscFreq,w
   751  0031  00F5               	movwf	??_ADConfig
   752  0032  01F6               	clrf	??_ADConfig+1
   753                           
   754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   755                           ; Switch size 1, requested type "simple"
   756                           ; Number of cases is 1, Range of values is 0 to 0
   757                           ; switch strategies available:
   758                           ; Name         Instructions Cycles
   759                           ; simple_byte            4     3 (average)
   760                           ; direct_byte           11     8 (fixed)
   761                           ; jumptable            260     6 (fixed)
   762                           ;	Chosen strategy is simple_byte
   763  0033  0876               	movf	??_ADConfig+1,w
   764  0034  3A00               	xorlw	0	; case 0
   765  0035  1903               	skipnz
   766  0036  2838               	goto	l1244
   767  0037  2829               	goto	l1046
   768  0038                     l1244:	
   769                           
   770                           ; Switch size 1, requested type "simple"
   771                           ; Number of cases is 4, Range of values is 1 to 20
   772                           ; switch strategies available:
   773                           ; Name         Instructions Cycles
   774                           ; simple_byte           13     7 (average)
   775                           ; direct_byte           71    11 (fixed)
   776                           ; jumptable            263     9 (fixed)
   777                           ;	Chosen strategy is simple_byte
   778  0038  0875               	movf	??_ADConfig,w
   779  0039  3A01               	xorlw	1	; case 1
   780  003A  1903               	skipnz
   781  003B  2818               	goto	l1038
   782  003C  3A05               	xorlw	5	; case 4
   783  003D  1903               	skipnz
   784  003E  281D               	goto	l1040
   785  003F  3A0C               	xorlw	12	; case 8
   786  0040  1903               	skipnz
   787  0041  281E               	goto	l1042
   788  0042  3A1C               	xorlw	28	; case 20
   789  0043  1903               	skipnz
   790  0044  2824               	goto	l1044
   791  0045  2829               	goto	l1046
   792  0046                     l89:	
   793                           ;ADC.c: 33:         case 'H':
   794                           
   795  0046  284B               	goto	l92
   796  0047                     l91:	
   797                           ;ADC.c: 36:         case 'L':
   798                           
   799                           ;ADC.c: 35:             break;
   800                           
   801                           ;ADC.c: 34:             ADCON1bits.ADFM = 0;
   802                           
   803                           
   804                           ;ADC.c: 37:             ADCON1bits.ADFM = 1;
   805  0047  1683               	bsf	3,5	;RP0=1, select bank1
   806  0048  1303               	bcf	3,6	;RP1=0, select bank1
   807  0049  179F               	bsf	31,7	;volatile
   808                           
   809                           ;ADC.c: 38:             break;
   810  004A  28AA               	goto	l1070
   811  004B                     l92:	
   812                           ;ADC.c: 39:         default:
   813                           
   814                           
   815                           ;ADC.c: 40:             ADCON1bits.ADFM = 0;
   816  004B  1683               	bsf	3,5	;RP0=1, select bank1
   817  004C  1303               	bcf	3,6	;RP1=0, select bank1
   818  004D  139F               	bcf	31,7	;volatile
   819                           
   820                           ;ADC.c: 41:     }
   821  004E  28AA               	goto	l1070
   822  004F                     l1050:	
   823  004F  0874               	movf	ADConfig@justificado,w
   824  0050  00F5               	movwf	??_ADConfig
   825  0051  01F6               	clrf	??_ADConfig+1
   826                           
   827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   828                           ; Switch size 1, requested type "simple"
   829                           ; Number of cases is 1, Range of values is 0 to 0
   830                           ; switch strategies available:
   831                           ; Name         Instructions Cycles
   832                           ; simple_byte            4     3 (average)
   833                           ; direct_byte           11     8 (fixed)
   834                           ; jumptable            260     6 (fixed)
   835                           ;	Chosen strategy is simple_byte
   836  0052  0876               	movf	??_ADConfig+1,w
   837  0053  3A00               	xorlw	0	; case 0
   838  0054  1903               	skipnz
   839  0055  2857               	goto	l1246
   840  0056  284B               	goto	l92
   841  0057                     l1246:	
   842                           
   843                           ; Switch size 1, requested type "simple"
   844                           ; Number of cases is 2, Range of values is 72 to 76
   845                           ; switch strategies available:
   846                           ; Name         Instructions Cycles
   847                           ; simple_byte            7     4 (average)
   848                           ; direct_byte           26    11 (fixed)
   849                           ; jumptable            263     9 (fixed)
   850                           ;	Chosen strategy is simple_byte
   851  0057  0875               	movf	??_ADConfig,w
   852  0058  3A48               	xorlw	72	; case 72
   853  0059  1903               	skipnz
   854  005A  2846               	goto	l89
   855  005B  3A04               	xorlw	4	; case 76
   856  005C  1903               	skipnz
   857  005D  2847               	goto	l91
   858  005E  284B               	goto	l92
   859  005F                     l94:	
   860                           ;ADC.c: 43:         case 0:
   861                           
   862                           
   863                           ;ADC.c: 44:             TRISAbits.TRISA0 = 1;
   864  005F  1405               	bsf	5,0	;volatile
   865                           
   866                           ;ADC.c: 45:             ANSELbits.ANS0 = 1;
   867  0060  1683               	bsf	3,5	;RP0=1, select bank3
   868  0061  1703               	bsf	3,6	;RP1=1, select bank3
   869  0062  1408               	bsf	8,0	;volatile
   870                           
   871                           ;ADC.c: 46:             ADCON0bits.CHS = 0;
   872  0063  30C3               	movlw	-61
   873  0064  1283               	bcf	3,5	;RP0=0, select bank0
   874  0065  1303               	bcf	3,6	;RP1=0, select bank0
   875  0066  059F               	andwf	31,f	;volatile
   876                           
   877                           ;ADC.c: 47:             break;
   878  0067  28CC               	goto	l95
   879  0068                     l96:	
   880                           ;ADC.c: 48:         case 1:
   881                           
   882                           
   883                           ;ADC.c: 49:             TRISAbits.TRISA1 = 1;
   884  0068  1485               	bsf	5,1	;volatile
   885                           
   886                           ;ADC.c: 50:             ANSELbits.ANS1 = 1;
   887  0069  1683               	bsf	3,5	;RP0=1, select bank3
   888  006A  1703               	bsf	3,6	;RP1=1, select bank3
   889  006B  1488               	bsf	8,1	;volatile
   890                           
   891                           ;ADC.c: 51:             ADCON0bits.CHS = 1;
   892  006C  1283               	bcf	3,5	;RP0=0, select bank0
   893  006D  1303               	bcf	3,6	;RP1=0, select bank0
   894  006E  081F               	movf	31,w	;volatile
   895  006F  39C3               	andlw	-61
   896  0070  3804               	iorlw	4
   897  0071  28A8               	goto	L8
   898  0072                     l97:	
   899                           ;ADC.c: 53:         case 2:
   900                           
   901                           ;ADC.c: 52:             break;
   902                           
   903                           
   904                           ;ADC.c: 54:             TRISAbits.TRISA2 = 1;
   905  0072  1505               	bsf	5,2	;volatile
   906                           
   907                           ;ADC.c: 55:             ANSELbits.ANS2 = 1;
   908  0073  1683               	bsf	3,5	;RP0=1, select bank3
   909  0074  1703               	bsf	3,6	;RP1=1, select bank3
   910  0075  1508               	bsf	8,2	;volatile
   911                           
   912                           ;ADC.c: 56:             ADCON0bits.CHS = 2;
   913  0076  1283               	bcf	3,5	;RP0=0, select bank0
   914  0077  1303               	bcf	3,6	;RP1=0, select bank0
   915  0078  081F               	movf	31,w	;volatile
   916  0079  39C3               	andlw	-61
   917  007A  3808               	iorlw	8
   918  007B  28A8               	goto	L8
   919  007C                     l98:	
   920                           ;ADC.c: 58:         case 3:
   921                           
   922                           ;ADC.c: 57:             break;
   923                           
   924                           
   925                           ;ADC.c: 59:             TRISAbits.TRISA3 = 1;
   926  007C  1585               	bsf	5,3	;volatile
   927                           
   928                           ;ADC.c: 60:             ANSELbits.ANS3 = 1;
   929  007D  1683               	bsf	3,5	;RP0=1, select bank3
   930  007E  1703               	bsf	3,6	;RP1=1, select bank3
   931  007F  1588               	bsf	8,3	;volatile
   932  0080  2885               	goto	L9
   933  0081                     l99:	
   934                           ;ADC.c: 63:         case 4:
   935                           
   936                           ;ADC.c: 62:             break;
   937                           
   938                           ;ADC.c: 61:             ADCON0bits.CHS = 3;
   939                           
   940                           
   941                           ;ADC.c: 64:             TRISAbits.TRISA5 = 1;
   942  0081  1685               	bsf	5,5	;volatile
   943                           
   944                           ;ADC.c: 65:             ANSELbits.ANS4 = 1;
   945  0082  1683               	bsf	3,5	;RP0=1, select bank3
   946  0083  1703               	bsf	3,6	;RP1=1, select bank3
   947  0084  1608               	bsf	8,4	;volatile
   948  0085                     L9:	
   949                           
   950                           ;ADC.c: 66:             ADCON0bits.CHS = 3;
   951  0085  1283               	bcf	3,5	;RP0=0, select bank0
   952  0086  1303               	bcf	3,6	;RP1=0, select bank0
   953  0087  081F               	movf	31,w	;volatile
   954  0088  39C3               	andlw	-61
   955  0089  380C               	iorlw	12
   956  008A  28A8               	goto	L8
   957  008B                     l100:	
   958                           ;ADC.c: 68:         case 5:
   959                           
   960                           ;ADC.c: 67:             break;
   961                           
   962                           
   963                           ;ADC.c: 69:             TRISEbits.TRISE0 = 1;
   964  008B  1409               	bsf	9,0	;volatile
   965                           
   966                           ;ADC.c: 70:             ANSELbits.ANS5 = 1;
   967  008C  1683               	bsf	3,5	;RP0=1, select bank3
   968  008D  1703               	bsf	3,6	;RP1=1, select bank3
   969  008E  1688               	bsf	8,5	;volatile
   970                           
   971                           ;ADC.c: 71:             ADCON0bits.CHS = 5;
   972  008F  1283               	bcf	3,5	;RP0=0, select bank0
   973  0090  1303               	bcf	3,6	;RP1=0, select bank0
   974  0091  081F               	movf	31,w	;volatile
   975  0092  39C3               	andlw	-61
   976  0093  3814               	iorlw	20
   977  0094  28A8               	goto	L8
   978  0095                     l101:	
   979                           ;ADC.c: 73:         case 6:
   980                           
   981                           ;ADC.c: 72:             break;
   982                           
   983                           
   984                           ;ADC.c: 74:             TRISEbits.TRISE1 = 1;
   985  0095  1489               	bsf	9,1	;volatile
   986                           
   987                           ;ADC.c: 75:             ANSELbits.ANS6 = 1;
   988  0096  1683               	bsf	3,5	;RP0=1, select bank3
   989  0097  1703               	bsf	3,6	;RP1=1, select bank3
   990  0098  1708               	bsf	8,6	;volatile
   991                           
   992                           ;ADC.c: 76:             ADCON0bits.CHS = 6;
   993  0099  1283               	bcf	3,5	;RP0=0, select bank0
   994  009A  1303               	bcf	3,6	;RP1=0, select bank0
   995  009B  081F               	movf	31,w	;volatile
   996  009C  39C3               	andlw	-61
   997  009D  3818               	iorlw	24
   998  009E  28A8               	goto	L8
   999  009F                     l102:	
  1000                           ;ADC.c: 78:         case 7:
  1001                           
  1002                           ;ADC.c: 77:             break;
  1003                           
  1004                           
  1005                           ;ADC.c: 79:             TRISEbits.TRISE2 = 1;
  1006  009F  1509               	bsf	9,2	;volatile
  1007                           
  1008                           ;ADC.c: 80:             ANSELbits.ANS7 = 1;
  1009  00A0  1683               	bsf	3,5	;RP0=1, select bank3
  1010  00A1  1703               	bsf	3,6	;RP1=1, select bank3
  1011  00A2  1788               	bsf	8,7	;volatile
  1012                           
  1013                           ;ADC.c: 81:             ADCON0bits.CHS = 7;
  1014  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1015  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1016  00A5  081F               	movf	31,w	;volatile
  1017  00A6  39C3               	andlw	-61
  1018  00A7  381C               	iorlw	28
  1019  00A8                     L8:	
  1020  00A8  009F               	movwf	31	;volatile
  1021                           
  1022                           ;ADC.c: 82:             break;
  1023  00A9  28CC               	goto	l95
  1024  00AA                     l1070:	
  1025  00AA  0873               	movf	ADConfig@canal,w
  1026  00AB  00F5               	movwf	??_ADConfig
  1027  00AC  01F6               	clrf	??_ADConfig+1
  1028                           
  1029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1030                           ; Switch size 1, requested type "simple"
  1031                           ; Number of cases is 1, Range of values is 0 to 0
  1032                           ; switch strategies available:
  1033                           ; Name         Instructions Cycles
  1034                           ; simple_byte            4     3 (average)
  1035                           ; direct_byte           11     8 (fixed)
  1036                           ; jumptable            260     6 (fixed)
  1037                           ;	Chosen strategy is simple_byte
  1038  00AD  0876               	movf	??_ADConfig+1,w
  1039  00AE  3A00               	xorlw	0	; case 0
  1040  00AF  1903               	skipnz
  1041  00B0  28B2               	goto	l1248
  1042  00B1  28CC               	goto	l95
  1043  00B2                     l1248:	
  1044                           
  1045                           ; Switch size 1, requested type "simple"
  1046                           ; Number of cases is 8, Range of values is 0 to 7
  1047                           ; switch strategies available:
  1048                           ; Name         Instructions Cycles
  1049                           ; simple_byte           25    13 (average)
  1050                           ; direct_byte           32     8 (fixed)
  1051                           ; jumptable            260     6 (fixed)
  1052                           ;	Chosen strategy is simple_byte
  1053  00B2  0875               	movf	??_ADConfig,w
  1054  00B3  3A00               	xorlw	0	; case 0
  1055  00B4  1903               	skipnz
  1056  00B5  285F               	goto	l94
  1057  00B6  3A01               	xorlw	1	; case 1
  1058  00B7  1903               	skipnz
  1059  00B8  2868               	goto	l96
  1060  00B9  3A03               	xorlw	3	; case 2
  1061  00BA  1903               	skipnz
  1062  00BB  2872               	goto	l97
  1063  00BC  3A01               	xorlw	1	; case 3
  1064  00BD  1903               	skipnz
  1065  00BE  287C               	goto	l98
  1066  00BF  3A07               	xorlw	7	; case 4
  1067  00C0  1903               	skipnz
  1068  00C1  2881               	goto	l99
  1069  00C2  3A01               	xorlw	1	; case 5
  1070  00C3  1903               	skipnz
  1071  00C4  288B               	goto	l100
  1072  00C5  3A03               	xorlw	3	; case 6
  1073  00C6  1903               	skipnz
  1074  00C7  2895               	goto	l101
  1075  00C8  3A01               	xorlw	1	; case 7
  1076  00C9  1903               	skipnz
  1077  00CA  289F               	goto	l102
  1078  00CB  28CC               	goto	l95
  1079  00CC                     l95:	
  1080                           
  1081                           ;ADC.c: 87:     ADCON0bits.ADON = 1;
  1082  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1083  00CD  141F               	bsf	31,0	;volatile
  1084                           
  1085                           ;ADC.c: 88:     PIR1bits.ADIF = 0;
  1086  00CE  130C               	bcf	12,6	;volatile
  1087                           
  1088                           ;ADC.c: 89:     PIE1bits.ADIE = 1;
  1089  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  1090  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  1091  00D1  170C               	bsf	12,6	;volatile
  1092                           
  1093                           ;ADC.c: 90:     INTCONbits.PEIE = 1;
  1094  00D2  170B               	bsf	11,6	;volatile
  1095                           
  1096                           ;ADC.c: 91:     INTCONbits.GIE = 1;
  1097  00D3  178B               	bsf	11,7	;volatile
  1098                           
  1099                           ;ADC.c: 92:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1100  00D4  3027               	movlw	39
  1101  00D5  00F6               	movwf	??_ADConfig+1
  1102  00D6  30F5               	movlw	245
  1103  00D7  00F5               	movwf	??_ADConfig
  1104  00D8                     u167:	
  1105  00D8  0BF5               	decfsz	??_ADConfig,f
  1106  00D9  28D8               	goto	u167
  1107  00DA  0BF6               	decfsz	??_ADConfig+1,f
  1108  00DB  28D8               	goto	u167
  1109                           
  1110                           ;ADC.c: 93:     ADCON0bits.GO_nDONE = 1;
  1111  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1112  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1113  00DE  149F               	bsf	31,1	;volatile
  1114  00DF  0008               	return
  1115  00E0                     __end_of_ADConfig:	
  1116                           
  1117                           	psect	text3
  1118  0166                     __ptext3:	
  1119 ;; *************** function _ADCinit *****************
  1120 ;; Defined at:
  1121 ;;		line 111 in file "ADC.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1135 ;;      Params:         0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0
  1137 ;;      Temps:          2       0       0       0       0
  1138 ;;      Totals:         2       0       0       0       0
  1139 ;;Total ram usage:        2 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    1
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           
  1150                           ;psect for function _ADCinit
  1151  0166                     _ADCinit:	
  1152                           
  1153                           ;ADC.c: 112:     PIR1bits.ADIF = 0;
  1154                           
  1155                           ;incstack = 0
  1156                           ; Regs used in _ADCinit: [wreg]
  1157  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0168  130C               	bcf	12,6	;volatile
  1160                           
  1161                           ;ADC.c: 113:     PIE1bits.ADIE = 1;
  1162  0169  1683               	bsf	3,5	;RP0=1, select bank1
  1163  016A  1303               	bcf	3,6	;RP1=0, select bank1
  1164  016B  170C               	bsf	12,6	;volatile
  1165                           
  1166                           ;ADC.c: 114:     INTCONbits.GIE = 1;
  1167  016C  178B               	bsf	11,7	;volatile
  1168                           
  1169                           ;ADC.c: 115:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1170  016D  301A               	movlw	26
  1171  016E  00F4               	movwf	??_ADCinit+1
  1172  016F  30F8               	movlw	248
  1173  0170  00F3               	movwf	??_ADCinit
  1174  0171                     u177:	
  1175  0171  0BF3               	decfsz	??_ADCinit,f
  1176  0172  2971               	goto	u177
  1177  0173  0BF4               	decfsz	??_ADCinit+1,f
  1178  0174  2971               	goto	u177
  1179  0175  0000               	nop
  1180                           
  1181                           ;ADC.c: 116:     ADCON0bits.GO_nDONE = 1;
  1182  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0178  149F               	bsf	31,1	;volatile
  1185  0179  0008               	return
  1186  017A                     __end_of_ADCinit:	
  1187                           
  1188                           	psect	text4
  1189  00E0                     __ptext4:	
  1190 ;; *************** function _ISR *****************
  1191 ;; Defined at:
  1192 ;;		line 34 in file "Slave1_main.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0
  1208 ;;      Temps:          3       0       0       0       0
  1209 ;;      Totals:         3       0       0       0       0
  1210 ;;Total ram usage:        3 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; This function calls:
  1213 ;;		Nothing
  1214 ;; This function is called by:
  1215 ;;		Interrupt level 1
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           
  1220                           ;psect for function _ISR
  1221  00E0                     _ISR:	
  1222                           
  1223                           ;Slave1_main.c: 35:     if(ADIF && ADIE){
  1224  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1225  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1226  00E2  1F0C               	btfss	12,6	;volatile
  1227  00E3  28EB               	goto	i1l37
  1228  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  1229  00E5  1303               	bcf	3,6	;RP1=0, select bank1
  1230  00E6  1F0C               	btfss	12,6	;volatile
  1231  00E7  28EB               	goto	i1l37
  1232                           
  1233                           ;Slave1_main.c: 36:         ADIE = 0;
  1234  00E8  130C               	bcf	12,6	;volatile
  1235                           
  1236                           ;Slave1_main.c: 37:         banderaADC = 1;
  1237  00E9  01F9               	clrf	_banderaADC
  1238  00EA  0AF9               	incf	_banderaADC,f
  1239  00EB                     i1l37:	
  1240                           ;Slave1_main.c: 38:     }
  1241                           
  1242                           
  1243                           ;Slave1_main.c: 40:      if(PIR1bits.SSPIF == 1){
  1244  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1245  00EC  1D8C               	btfss	12,3	;volatile
  1246  00ED  2918               	goto	i1l47
  1247                           
  1248                           ;Slave1_main.c: 42:         SSPCONbits.CKP = 0;
  1249  00EE  1214               	bcf	20,4	;volatile
  1250                           
  1251                           ;Slave1_main.c: 44:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1252  00EF  1B14               	btfsc	20,6	;volatile
  1253  00F0  28F3               	goto	i1l862
  1254  00F1  1F94               	btfss	20,7	;volatile
  1255  00F2  28FB               	goto	i1l39
  1256  00F3                     i1l862:	
  1257                           
  1258                           ;Slave1_main.c: 45:             z = SSPBUF;
  1259  00F3  0813               	movf	19,w	;volatile
  1260  00F4  00F0               	movwf	??_ISR
  1261  00F5  0870               	movf	??_ISR,w
  1262  00F6  00F8               	movwf	_z
  1263                           
  1264                           ;Slave1_main.c: 46:             SSPCONbits.SSPOV = 0;
  1265  00F7  1314               	bcf	20,6	;volatile
  1266                           
  1267                           ;Slave1_main.c: 47:             SSPCONbits.WCOL = 0;
  1268  00F8  1394               	bcf	20,7	;volatile
  1269                           
  1270                           ;Slave1_main.c: 48:             SSPCONbits.CKP = 1;
  1271  00F9  1614               	bsf	20,4	;volatile
  1272                           
  1273                           ;Slave1_main.c: 49:         }
  1274  00FA  2916               	goto	i1l42
  1275  00FB                     i1l39:	
  1276                           ;Slave1_main.c: 61:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1277                           
  1278  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  1279  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  1280  00FD  1E94               	btfss	20,5	;volatile
  1281  00FE  1D14               	btfss	20,2	;volatile
  1282  00FF  2916               	goto	i1l42
  1283                           
  1284                           ;Slave1_main.c: 62:             z = SSPBUF;
  1285  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0102  0813               	movf	19,w	;volatile
  1288  0103  00F0               	movwf	??_ISR
  1289  0104  0870               	movf	??_ISR,w
  1290  0105  00F8               	movwf	_z
  1291                           
  1292                           ;Slave1_main.c: 63:             BF = 0;
  1293  0106  1683               	bsf	3,5	;RP0=1, select bank1
  1294  0107  1303               	bcf	3,6	;RP1=0, select bank1
  1295  0108  1014               	bcf	20,0	;volatile
  1296                           
  1297                           ;Slave1_main.c: 64:             SSPBUF = valorADC;
  1298  0109  087A               	movf	_valorADC,w
  1299  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1300  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1301  010C  0093               	movwf	19	;volatile
  1302                           
  1303                           ;Slave1_main.c: 65:             SSPCONbits.CKP = 1;
  1304  010D  1614               	bsf	20,4	;volatile
  1305                           
  1306                           ;Slave1_main.c: 66:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1307  010E  3053               	movlw	83
  1308  010F  00F0               	movwf	??_ISR
  1309  0110                     u18_27:	
  1310  0110  0BF0               	decfsz	??_ISR,f
  1311  0111  2910               	goto	u18_27
  1312  0112                     i1l44:	
  1313                           ;Slave1_main.c: 67:             while(SSPSTATbits.BF);
  1314                           
  1315  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1316  0113  1303               	bcf	3,6	;RP1=0, select bank1
  1317  0114  1814               	btfsc	20,0	;volatile
  1318  0115  2912               	goto	i1l44
  1319  0116                     i1l42:	
  1320                           
  1321                           ;Slave1_main.c: 70:         PIR1bits.SSPIF = 0;
  1322  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0117  118C               	bcf	12,3	;volatile
  1324  0118                     i1l47:	
  1325  0118  0872               	movf	??_ISR+2,w
  1326  0119  008A               	movwf	10
  1327  011A  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
  1328  011B  0083               	movwf	3
  1329  011C  0EFE               	swapf	126,f
  1330  011D  0E7E               	swapf	126,w
  1331  011E  0009               	retfie
  1332  011F                     __end_of_ISR:	
  1333  007E                     btemp	set	126	;btemp
  1334  007E                     wtemp0	set	126
  1335                           
  1336                           	psect	intentry
  1337  0004                     __pintentry:	
  1338                           ;incstack = 0
  1339                           ; Regs used in _ISR: [wreg]
  1340                           
  1341  0004                     interrupt_function:	
  1342  007E                     saved_w	set	btemp
  1343  0004  00FE               	movwf	btemp
  1344  0005  0E03               	swapf	3,w
  1345  0006  00F1               	movwf	??_ISR+1
  1346  0007  080A               	movf	10,w
  1347  0008  00F2               	movwf	??_ISR+2
  1348  0009  120A  118A  28E0   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADConfig

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     233
                                              0 BANK0      2     2      0
                            _ADCinit
                           _ADConfig
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADConfig                                             5     3      2     218
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADCinit                                              2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCinit
   _ADConfig
   _I2C_Slave_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb 22 16:15:41 2020

                       _z 0078               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l91 0047                        l92 004B  
                      l94 005F                        l95 00CC                        l96 0068  
                      l97 0072                        l89 0046                        l98 007C  
                      l99 0081                       l100 008B                       l101 0095  
                     l102 009F                       _GIE 005F                       u167 00D8  
                     u177 0171              __CFG_CPD$OFF 0000                       _ISR 00E0  
         __end_of_ADCinit 017A              __CFG_LVP$OFF 0000                      ?_ISR 0070  
                    l1040 001D                      l1042 001E                      l1050 004F  
                    l1044 0024                      l1070 00AA                      l1046 0029  
                    l1038 0018                      l1048 0030                      l1244 0038  
                    l1172 013A                      l1246 0057                      l1248 00B2  
                    _ADIE 0466                      _ADIF 0066                      _PEIE 005E  
                    i1l42 0116                      i1l44 0112                      i1l37 00EB  
                    i1l39 00FB                      i1l47 0118              __CFG_WRT$OFF 0000  
                    _main 011F                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000          __end_of_ADConfig 00E0                     ??_ISR 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     i1l862 00F3  
                   u18_27 0110                     _SSPIE 0463                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 014C                 ??_ADCinit 0073  
                  ??_main 0020                    _ADRESH 001E                    _ADRESL 009E  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPBUF 0013                    _SSPCON 0014            __CFG_PWRTE$OFF 0000  
                  saved_w 007E                 ?_ADConfig 0073   __end_of__initialization 0012  
          __pcstackCOMMON 0070   __size_of_I2C_Slave_Init 001A                _banderaADC 0079  
              ??_ADConfig 0075     I2C_Slave_Init@address 0073                __pmaintext 011F  
           ADConfig@canal 0073                __pintentry 0004                   _ADCinit 0166  
         ADConfig@oscFreq 0077                   _SSPCON2 0091                   _SSPSTAT 0094  
               _ANSELbits 0188                   __ptext1 014C                   __ptext2 0016  
                 __ptext3 0166                   __ptext4 00E0              __size_of_ISR 003F  
    end_of_initialization 0012            _I2C_Slave_Init 014C                 _TRISAbits 0085  
               _TRISCbits 0087                 _TRISEbits 0089         __size_of_ADConfig 00CA  
  __end_of_I2C_Slave_Init 0166       start_initialization 000F               __end_of_ISR 011F  
__CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0070                  ?_ADCinit 0070  
             __pbssCOMMON 0078                 ___latbits 0002             __pcstackBANK0 0020  
                _ADConfig 0016         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
     ADConfig@justificado 0074          __size_of_ADCinit 0014         __CFG_BOR4V$BOR40V 0000  
        ??_I2C_Slave_Init 0073             __size_of_main 002D                  _valorADC 007A  
              _INTCONbits 000B                  intlevel1 0000               _SSPCON2bits 0091  
              _SSPCONbits 0014  
