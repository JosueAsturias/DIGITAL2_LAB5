

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 19 15:33:17 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0006                     _PORTBbits	set	6
   206  0005                     _PORTA	set	5
   207  000B                     _INTCONbits	set	11
   208  0096                     _IOCB	set	150
   209  0081                     _OPTION_REGbits	set	129
   210  0095                     _WPUB	set	149
   211  0086                     _TRISB	set	134
   212  0085                     _TRISA	set	133
   213  0189                     _ANSELH	set	393
   214  0188                     _ANSEL	set	392
   215                           
   216                           ; #config settings
   217  0000                     
   218                           	psect	cinit
   219  000F                     start_initialization:	
   220  000F                     __initialization:	
   221                           
   222                           ; Clear objects allocated to COMMON
   223  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   224  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   225  0011  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
   226  0012                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229  0012                     __end_of__initialization:	
   230  0012  0183               	clrf	3
   231  0013  120A  118A  2891   	ljmp	_main	;jump to C main() function
   232                           
   233                           	psect	bssCOMMON
   234  0074                     __pbssCOMMON:	
   235  0074                     _banderaUP:	
   236  0074                     	ds	1
   237  0075                     _banderaDO:	
   238  0075                     	ds	1
   239  0076                     _banderaBoton:	
   240  0076                     	ds	1
   241                           
   242                           	psect	cstackCOMMON
   243  0070                     __pcstackCOMMON:	
   244  0070                     ?_config_PUERTOS:	
   245  0070                     ?_press_Subir:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_press_Bajar:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_ISR:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ??_ISR:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_main:	
   258                           ; 1 bytes @ 0x0
   259                           
   260                           
   261                           ; 1 bytes @ 0x0
   262  0070                     	ds	2
   263  0072                     ??_config_PUERTOS:	
   264  0072                     ??_press_Subir:	
   265                           ; 1 bytes @ 0x2
   266                           
   267  0072                     ??_press_Bajar:	
   268                           ; 1 bytes @ 0x2
   269                           
   270                           
   271                           ; 1 bytes @ 0x2
   272  0072                     	ds	2
   273  0074                     ??_main:	
   274                           
   275                           	psect	maintext
   276  0091                     __pmaintext:	
   277                           ; 1 bytes @ 0x4
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 48 in file "Slave2_main.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, status,2, status,0, pclath, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : B00/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   297 ;;      Params:         0       0       0       0       0
   298 ;;      Locals:         0       0       0       0       0
   299 ;;      Temps:          0       0       0       0       0
   300 ;;      Totals:         0       0       0       0       0
   301 ;;Total ram usage:        0 bytes
   302 ;; Hardware stack levels required when called:    2
   303 ;; This function calls:
   304 ;;		_config_PUERTOS
   305 ;;		_press_Bajar
   306 ;;		_press_Subir
   307 ;; This function is called by:
   308 ;;		Startup code after reset
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           
   313                           ;psect for function _main
   314  0091                     _main:	
   315                           
   316                           ;Slave2_main.c: 49:     config_PUERTOS();
   317                           
   318                           ;incstack = 0
   319                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   320  0091  120A  118A  207C  120A  118A  	fcall	_config_PUERTOS
   321                           
   322                           ;Slave2_main.c: 50:     INTCONbits.GIE = 1;
   323  0096  178B               	bsf	11,7	;volatile
   324  0097                     l46:	
   325                           ;Slave2_main.c: 51:     while(1){
   326                           
   327                           
   328                           ;Slave2_main.c: 52:         press_Subir();
   329  0097  120A  118A  204A  120A  118A  	fcall	_press_Subir
   330                           
   331                           ;Slave2_main.c: 53:         press_Bajar();
   332  009C  120A  118A  2016  120A  118A  	fcall	_press_Bajar
   333  00A1  2897               	goto	l46
   334  00A2                     __end_of_main:	
   335                           
   336                           	psect	text1
   337  004A                     __ptext1:	
   338 ;; *************** function _press_Subir *****************
   339 ;; Defined at:
   340 ;;		line 74 in file "Slave2_main.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2, status,0
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   354 ;;      Params:         0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0
   356 ;;      Temps:          2       0       0       0       0
   357 ;;      Totals:         2       0       0       0       0
   358 ;;Total ram usage:        2 bytes
   359 ;; Hardware stack levels used:    1
   360 ;; Hardware stack levels required when called:    1
   361 ;; This function calls:
   362 ;;		Nothing
   363 ;; This function is called by:
   364 ;;		_main
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           
   369                           ;psect for function _press_Subir
   370  004A                     _press_Subir:	
   371                           
   372                           ;Slave2_main.c: 75:     if (banderaBoton == 1){
   373                           
   374                           ;incstack = 0
   375                           ; Regs used in _press_Subir: [wreg+status,2+status,0]
   376  004A  0376               	decf	_banderaBoton,w
   377  004B  1D03               	btfss	3,2
   378  004C  286B               	goto	l700
   379                           
   380                           ;Slave2_main.c: 76:         if (banderaUP == 0){
   381  004D  0874               	movf	_banderaUP,w
   382  004E  1D03               	btfss	3,2
   383  004F  286B               	goto	l700
   384                           
   385                           ;Slave2_main.c: 77:             if (PORTBbits.RB5 == 0){
   386  0050  1283               	bcf	3,5	;RP0=0, select bank0
   387  0051  1303               	bcf	3,6	;RP1=0, select bank0
   388  0052  1A86               	btfsc	6,5	;volatile
   389  0053  286B               	goto	l700
   390                           
   391                           ;Slave2_main.c: 78:                 _delay((unsigned long)((69)*(4000000/4000.0)));
   392  0054  305A               	movlw	90
   393  0055  00F3               	movwf	??_press_Subir+1
   394  0056  309B               	movlw	155
   395  0057  00F2               	movwf	??_press_Subir
   396  0058                     u177:	
   397  0058  0BF2               	decfsz	??_press_Subir,f
   398  0059  2858               	goto	u177
   399  005A  0BF3               	decfsz	??_press_Subir+1,f
   400  005B  2858               	goto	u177
   401                           
   402                           ;Slave2_main.c: 79:                 PORTA = PORTA + 1;
   403  005C  1283               	bcf	3,5	;RP0=0, select bank0
   404  005D  1303               	bcf	3,6	;RP1=0, select bank0
   405  005E  0805               	movf	5,w	;volatile
   406  005F  3E01               	addlw	1
   407  0060  0085               	movwf	5	;volatile
   408                           
   409                           ;Slave2_main.c: 80:                 if (PORTA >= 15){
   410  0061  300F               	movlw	15
   411  0062  0205               	subwf	5,w	;volatile
   412  0063  1C03               	skipc
   413  0064  2867               	goto	l694
   414                           
   415                           ;Slave2_main.c: 81:                     PORTA = 15;
   416  0065  300F               	movlw	15
   417  0066  0085               	movwf	5	;volatile
   418  0067                     l694:	
   419                           
   420                           ;Slave2_main.c: 83:                 banderaBoton = 0;
   421  0067  01F6               	clrf	_banderaBoton
   422                           
   423                           ;Slave2_main.c: 84:                 banderaUP = 1;
   424  0068  01F4               	clrf	_banderaUP
   425  0069  0AF4               	incf	_banderaUP,f
   426                           
   427                           ;Slave2_main.c: 85:                 INTCONbits.RBIE = 1;
   428  006A  158B               	bsf	11,3	;volatile
   429  006B                     l700:	
   430                           
   431                           ;Slave2_main.c: 89:     if (banderaUP == 1){
   432  006B  0374               	decf	_banderaUP,w
   433  006C  1D03               	btfss	3,2
   434  006D  0008               	return
   435                           
   436                           ;Slave2_main.c: 90:         if (PORTBbits.RB5 == 1){
   437  006E  1283               	bcf	3,5	;RP0=0, select bank0
   438  006F  1303               	bcf	3,6	;RP1=0, select bank0
   439  0070  1E86               	btfss	6,5	;volatile
   440  0071  0008               	return
   441                           
   442                           ;Slave2_main.c: 91:         _delay((unsigned long)((69)*(4000000/4000.0)));
   443  0072  305A               	movlw	90
   444  0073  00F3               	movwf	??_press_Subir+1
   445  0074  309B               	movlw	155
   446  0075  00F2               	movwf	??_press_Subir
   447  0076                     u187:	
   448  0076  0BF2               	decfsz	??_press_Subir,f
   449  0077  2876               	goto	u187
   450  0078  0BF3               	decfsz	??_press_Subir+1,f
   451  0079  2876               	goto	u187
   452                           
   453                           ;Slave2_main.c: 92:         banderaUP = 0;
   454  007A  01F4               	clrf	_banderaUP
   455  007B  0008               	return
   456  007C                     __end_of_press_Subir:	
   457                           
   458                           	psect	text2
   459  0016                     __ptext2:	
   460 ;; *************** function _press_Bajar *****************
   461 ;; Defined at:
   462 ;;		line 97 in file "Slave2_main.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          2       0       0       0       0
   479 ;;      Totals:         2       0       0       0       0
   480 ;;Total ram usage:        2 bytes
   481 ;; Hardware stack levels used:    1
   482 ;; Hardware stack levels required when called:    1
   483 ;; This function calls:
   484 ;;		Nothing
   485 ;; This function is called by:
   486 ;;		_main
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           
   491                           ;psect for function _press_Bajar
   492  0016                     _press_Bajar:	
   493                           
   494                           ;Slave2_main.c: 98:     if (banderaBoton == 1){
   495                           
   496                           ;incstack = 0
   497                           ; Regs used in _press_Bajar: [wreg+status,2+status,0]
   498  0016  0376               	decf	_banderaBoton,w
   499  0017  1D03               	btfss	3,2
   500  0018  2839               	goto	l728
   501                           
   502                           ;Slave2_main.c: 99:         if (banderaDO == 0){
   503  0019  0875               	movf	_banderaDO,w
   504  001A  1D03               	btfss	3,2
   505  001B  2839               	goto	l728
   506                           
   507                           ;Slave2_main.c: 100:             if (PORTBbits.RB4 == 0){
   508  001C  1283               	bcf	3,5	;RP0=0, select bank0
   509  001D  1303               	bcf	3,6	;RP1=0, select bank0
   510  001E  1A06               	btfsc	6,4	;volatile
   511  001F  2839               	goto	l728
   512                           
   513                           ;Slave2_main.c: 101:                 _delay((unsigned long)((69)*(4000000/4000.0)));
   514  0020  305A               	movlw	90
   515  0021  00F3               	movwf	??_press_Bajar+1
   516  0022  309B               	movlw	155
   517  0023  00F2               	movwf	??_press_Bajar
   518  0024                     u197:	
   519  0024  0BF2               	decfsz	??_press_Bajar,f
   520  0025  2824               	goto	u197
   521  0026  0BF3               	decfsz	??_press_Bajar+1,f
   522  0027  2824               	goto	u197
   523                           
   524                           ;Slave2_main.c: 102:                 PORTA = PORTA - 1;
   525  0028  1283               	bcf	3,5	;RP0=0, select bank0
   526  0029  1303               	bcf	3,6	;RP1=0, select bank0
   527  002A  0805               	movf	5,w	;volatile
   528  002B  3EFF               	addlw	255
   529  002C  0085               	movwf	5	;volatile
   530                           
   531                           ;Slave2_main.c: 103:                 if (PORTA == 0 || PORTA > 200){
   532  002D  0805               	movf	5,w	;volatile
   533  002E  1903               	btfsc	3,2
   534  002F  2834               	goto	l722
   535  0030  30C9               	movlw	201
   536  0031  0205               	subwf	5,w	;volatile
   537  0032  1C03               	skipc
   538  0033  2835               	goto	l67
   539  0034                     l722:	
   540                           
   541                           ;Slave2_main.c: 104:                     PORTA = 0;
   542  0034  0185               	clrf	5	;volatile
   543  0035                     l67:	
   544                           ;Slave2_main.c: 105:                 }
   545                           
   546                           
   547                           ;Slave2_main.c: 106:                 banderaBoton = 0;
   548  0035  01F6               	clrf	_banderaBoton
   549                           
   550                           ;Slave2_main.c: 107:                 banderaDO = 1;
   551  0036  01F5               	clrf	_banderaDO
   552  0037  0AF5               	incf	_banderaDO,f
   553                           
   554                           ;Slave2_main.c: 108:                 INTCONbits.RBIE = 1;
   555  0038  158B               	bsf	11,3	;volatile
   556  0039                     l728:	
   557                           
   558                           ;Slave2_main.c: 112:     if (banderaDO == 1){
   559  0039  0375               	decf	_banderaDO,w
   560  003A  1D03               	btfss	3,2
   561  003B  0008               	return
   562                           
   563                           ;Slave2_main.c: 113:         if (PORTBbits.RB4 == 1){
   564  003C  1283               	bcf	3,5	;RP0=0, select bank0
   565  003D  1303               	bcf	3,6	;RP1=0, select bank0
   566  003E  1E06               	btfss	6,4	;volatile
   567  003F  0008               	return
   568                           
   569                           ;Slave2_main.c: 114:         _delay((unsigned long)((69)*(4000000/4000.0)));
   570  0040  305A               	movlw	90
   571  0041  00F3               	movwf	??_press_Bajar+1
   572  0042  309B               	movlw	155
   573  0043  00F2               	movwf	??_press_Bajar
   574  0044                     u207:	
   575  0044  0BF2               	decfsz	??_press_Bajar,f
   576  0045  2844               	goto	u207
   577  0046  0BF3               	decfsz	??_press_Bajar+1,f
   578  0047  2844               	goto	u207
   579                           
   580                           ;Slave2_main.c: 115:         banderaDO = 0;
   581  0048  01F5               	clrf	_banderaDO
   582  0049  0008               	return
   583  004A                     __end_of_press_Bajar:	
   584                           
   585                           	psect	text3
   586  007C                     __ptext3:	
   587 ;; *************** function _config_PUERTOS *****************
   588 ;; Defined at:
   589 ;;		line 58 in file "Slave2_main.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   603 ;;      Params:         0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used:    1
   609 ;; Hardware stack levels required when called:    1
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           
   618                           ;psect for function _config_PUERTOS
   619  007C                     _config_PUERTOS:	
   620                           
   621                           ;Slave2_main.c: 60:     TRISA = 0;
   622                           
   623                           ;incstack = 0
   624                           ; Regs used in _config_PUERTOS: [wreg+status,2]
   625  007C  1683               	bsf	3,5	;RP0=1, select bank1
   626  007D  1303               	bcf	3,6	;RP1=0, select bank1
   627  007E  0185               	clrf	5	;volatile
   628                           
   629                           ;Slave2_main.c: 61:     TRISB = 0b00110000;
   630  007F  3030               	movlw	48
   631  0080  0086               	movwf	6	;volatile
   632                           
   633                           ;Slave2_main.c: 62:     PORTA = 0;
   634  0081  1283               	bcf	3,5	;RP0=0, select bank0
   635  0082  1303               	bcf	3,6	;RP1=0, select bank0
   636  0083  0185               	clrf	5	;volatile
   637                           
   638                           ;Slave2_main.c: 63:     ANSEL = 0;
   639  0084  1683               	bsf	3,5	;RP0=1, select bank3
   640  0085  1703               	bsf	3,6	;RP1=1, select bank3
   641  0086  0188               	clrf	8	;volatile
   642                           
   643                           ;Slave2_main.c: 64:     ANSELH = 0;
   644  0087  0189               	clrf	9	;volatile
   645                           
   646                           ;Slave2_main.c: 65:     WPUB = 0b00110000;
   647  0088  3030               	movlw	48
   648  0089  1683               	bsf	3,5	;RP0=1, select bank1
   649  008A  1303               	bcf	3,6	;RP1=0, select bank1
   650  008B  0095               	movwf	21	;volatile
   651                           
   652                           ;Slave2_main.c: 66:     OPTION_REGbits.nRBPU = 0;
   653  008C  1381               	bcf	1,7	;volatile
   654                           
   655                           ;Slave2_main.c: 69:     IOCB = 0b00110000;;
   656  008D  3030               	movlw	48
   657  008E  0096               	movwf	22	;volatile
   658                           
   659                           ;Slave2_main.c: 70:     INTCONbits.RBIE = 1;
   660  008F  158B               	bsf	11,3	;volatile
   661  0090  0008               	return
   662  0091                     __end_of_config_PUERTOS:	
   663                           
   664                           	psect	text4
   665  00A2                     __ptext4:	
   666 ;; *************** function _ISR *****************
   667 ;; Defined at:
   668 ;;		line 37 in file "Slave2_main.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;		None
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   682 ;;      Params:         0       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0
   684 ;;      Temps:          2       0       0       0       0
   685 ;;      Totals:         2       0       0       0       0
   686 ;;Total ram usage:        2 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		Interrupt level 1
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _ISR
   697  00A2                     _ISR:	
   698                           
   699                           ;Slave2_main.c: 38:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
   700  00A2  180B               	btfsc	11,0	;volatile
   701  00A3  1D8B               	btfss	11,3	;volatile
   702  00A4  28AC               	goto	i1l41
   703                           
   704                           ;Slave2_main.c: 39:         INTCONbits.RBIF = 0;
   705  00A5  100B               	bcf	11,0	;volatile
   706                           
   707                           ;Slave2_main.c: 40:         if (banderaBoton == 0){
   708  00A6  0876               	movf	_banderaBoton,w
   709  00A7  1D03               	btfss	3,2
   710  00A8  28AC               	goto	i1l41
   711                           
   712                           ;Slave2_main.c: 41:             banderaBoton = 1;
   713  00A9  01F6               	clrf	_banderaBoton
   714  00AA  0AF6               	incf	_banderaBoton,f
   715                           
   716                           ;Slave2_main.c: 42:             INTCONbits.RBIE = 0;
   717  00AB  118B               	bcf	11,3	;volatile
   718  00AC                     i1l41:	
   719  00AC  0871               	movf	??_ISR+1,w
   720  00AD  008A               	movwf	10
   721  00AE  0E70               	swapf	??_ISR^(0+4294967168),w
   722  00AF  0083               	movwf	3
   723  00B0  0EFE               	swapf	126,f
   724  00B1  0E7E               	swapf	126,w
   725  00B2  0009               	retfie
   726  00B3                     __end_of_ISR:	
   727  007E                     btemp	set	126	;btemp
   728  007E                     wtemp0	set	126
   729                           
   730                           	psect	intentry
   731  0004                     __pintentry:	
   732                           ;incstack = 0
   733                           ; Regs used in _ISR: [wreg+status,2+status,0]
   734                           
   735  0004                     interrupt_function:	
   736  007E                     saved_w	set	btemp
   737  0004  00FE               	movwf	btemp
   738  0005  0E03               	swapf	3,w
   739  0006  00F0               	movwf	??_ISR
   740  0007  080A               	movf	10,w
   741  0008  00F1               	movwf	??_ISR+1
   742  0009  120A  118A  28A2   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_press_Bajar
    _main->_press_Subir

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _config_PUERTOS
                        _press_Bajar
                        _press_Subir
 ---------------------------------------------------------------------------------
 (1) _press_Subir                                          2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _press_Bajar                                          2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_PUERTOS                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_PUERTOS
   _press_Bajar
   _press_Subir

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 19 15:33:17 2020

             __CFG_CP$OFF 0000                        l46 0097                        l67 0035  
                     l700 006B                       l722 0034                       l728 0039  
                     l694 0067                       u207 0044                       u177 0058  
            __CFG_CPD$OFF 0000                       u187 0076                       _ISR 00A2  
                     u197 0024              __CFG_LVP$OFF 0000                      ?_ISR 0070  
                    _IOCB 0096                      i1l41 00AC                      _WPUB 0095  
            __CFG_WRT$OFF 0000                      _main 0091                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _PORTA 0005                     _TRISA 0085                     _TRISB 0086  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 00A2                    ??_main 0074  
                  _ANSELH 0189          ??_config_PUERTOS 0072              _banderaBoton 0076  
          __CFG_PWRTE$OFF 0000              ?_press_Bajar 0070                    saved_w 007E  
            ?_press_Subir 0070   __end_of__initialization 0012            __pcstackCOMMON 0070  
          _OPTION_REGbits 0081                __pmaintext 0091                __pintentry 0004  
                 __ptext1 004A                   __ptext2 0016                   __ptext3 007C  
                 __ptext4 00A2              __size_of_ISR 0011      __size_of_press_Bajar 0034  
    end_of_initialization 0012      __size_of_press_Subir 0032                 _PORTBbits 0006  
     start_initialization 000F               __end_of_ISR 00B3  __CFG_FOSC$INTRC_NOCLKOUT 0000  
 __size_of_config_PUERTOS 0015               __pbssCOMMON 0074                 ___latbits 0002  
               _banderaDO 0075                 _banderaUP 0074         interrupt_function 0004  
           ??_press_Bajar 0072             ??_press_Subir 0072            _config_PUERTOS 007C  
       __CFG_BOR4V$BOR40V 0000       __end_of_press_Bajar 004A       __end_of_press_Subir 007C  
           __size_of_main 0011    __end_of_config_PUERTOS 0091                _INTCONbits 000B  
                intlevel1 0000           ?_config_PUERTOS 0070               _press_Bajar 0016  
             _press_Subir 004A  
