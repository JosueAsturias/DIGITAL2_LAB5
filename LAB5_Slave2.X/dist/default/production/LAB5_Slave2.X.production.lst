

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb 22 16:27:35 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.05
    17                           ; Generated 20/12/2018 GMT
    18                           ; 
    19                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0014                     _SSPCON	set	20
   285  0006                     _PORTBbits	set	6
   286  0005                     _PORTA	set	5
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCONbits	set	20
   289  000C                     _PIR1bits	set	12
   290  000B                     _INTCONbits	set	11
   291  0063                     _SSPIF	set	99
   292  005E                     _PEIE	set	94
   293  005F                     _GIE	set	95
   294  0091                     _SSPCON2bits	set	145
   295  0087                     _TRISCbits	set	135
   296  0094                     _SSPSTAT	set	148
   297  0093                     _SSPADD	set	147
   298  0091                     _SSPCON2	set	145
   299  0096                     _IOCB	set	150
   300  0081                     _OPTION_REGbits	set	129
   301  0095                     _WPUB	set	149
   302  0086                     _TRISB	set	134
   303  0085                     _TRISA	set	133
   304  0094                     _SSPSTATbits	set	148
   305  0463                     _SSPIE	set	1123
   306  043C                     _TRISC4	set	1084
   307  043B                     _TRISC3	set	1083
   308  04A0                     _BF	set	1184
   309  0189                     _ANSELH	set	393
   310  0188                     _ANSEL	set	392
   311                           
   312                           ; #config settings
   313  0000                     
   314                           	psect	cinit
   315  000F                     start_initialization:	
   316  000F                     __initialization:	
   317                           
   318                           ; Clear objects allocated to COMMON
   319  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   320  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   321  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   322  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   323  0013                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326  0013                     __end_of__initialization:	
   327  0013  0183               	clrf	3
   328  0014  120A  118A  28D6   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMMON
   331  0075                     __pbssCOMMON:	
   332  0075                     _z:	
   333  0075                     	ds	1
   334  0076                     _banderaUP:	
   335  0076                     	ds	1
   336  0077                     _banderaDO:	
   337  0077                     	ds	1
   338  0078                     _banderaBoton:	
   339  0078                     	ds	1
   340                           
   341                           	psect	cstackCOMMON
   342  0070                     __pcstackCOMMON:	
   343  0070                     ?_config_PUERTOS:	
   344  0070                     ?_I2C_Slave_Init:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_press_Subir:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_press_Bajar:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_ISR:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ??_ISR:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_main:	
   360                           ; 1 bytes @ 0x0
   361                           
   362                           
   363                           ; 1 bytes @ 0x0
   364  0070                     	ds	3
   365  0073                     ??_config_PUERTOS:	
   366  0073                     ??_I2C_Slave_Init:	
   367                           ; 1 bytes @ 0x3
   368                           
   369  0073                     ??_press_Subir:	
   370                           ; 1 bytes @ 0x3
   371                           
   372  0073                     ??_press_Bajar:	
   373                           ; 1 bytes @ 0x3
   374                           
   375  0073                     I2C_Slave_Init@address:	
   376                           ; 1 bytes @ 0x3
   377                           
   378                           
   379                           ; 1 bytes @ 0x3
   380  0073                     	ds	2
   381  0075                     ??_main:	
   382                           
   383                           	psect	maintext
   384  00D6                     __pmaintext:	
   385                           ; 1 bytes @ 0x5
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 85 in file "Slave2_main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : B00/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0
   407 ;;      Temps:          0       0       0       0       0
   408 ;;      Totals:         0       0       0       0       0
   409 ;;Total ram usage:        0 bytes
   410 ;; Hardware stack levels required when called:    2
   411 ;; This function calls:
   412 ;;		_I2C_Slave_Init
   413 ;;		_config_PUERTOS
   414 ;;		_press_Bajar
   415 ;;		_press_Subir
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           
   422                           ;psect for function _main
   423  00D6                     _main:	
   424                           
   425                           ;Slave2_main.c: 86:     config_PUERTOS();
   426                           
   427                           ;incstack = 0
   428                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   429  00D6  120A  118A  20ED  120A  118A  	fcall	_config_PUERTOS
   430                           
   431                           ;Slave2_main.c: 87:     INTCONbits.GIE = 1;
   432  00DB  178B               	bsf	11,7	;volatile
   433                           
   434                           ;Slave2_main.c: 88:     I2C_Slave_Init(0x70);
   435  00DC  3070               	movlw	112
   436  00DD  120A  118A  20BC  120A  118A  	fcall	_I2C_Slave_Init
   437  00E2                     l69:	
   438                           ;Slave2_main.c: 89:     while(1){
   439                           
   440                           
   441                           ;Slave2_main.c: 90:         press_Subir();
   442  00E2  120A  118A  208A  120A  118A  	fcall	_press_Subir
   443                           
   444                           ;Slave2_main.c: 91:         press_Bajar();
   445  00E7  120A  118A  2056  120A  118A  	fcall	_press_Bajar
   446  00EC  28E2               	goto	l69
   447  00ED                     __end_of_main:	
   448                           
   449                           	psect	text1
   450  008A                     __ptext1:	
   451 ;; *************** function _press_Subir *****************
   452 ;; Defined at:
   453 ;;		line 113 in file "Slave2_main.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, status,2, status,0
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   467 ;;      Params:         0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0
   469 ;;      Temps:          2       0       0       0       0
   470 ;;      Totals:         2       0       0       0       0
   471 ;;Total ram usage:        2 bytes
   472 ;; Hardware stack levels used:    1
   473 ;; Hardware stack levels required when called:    1
   474 ;; This function calls:
   475 ;;		Nothing
   476 ;; This function is called by:
   477 ;;		_main
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           
   482                           ;psect for function _press_Subir
   483  008A                     _press_Subir:	
   484                           
   485                           ;Slave2_main.c: 114:     if (banderaBoton == 1){
   486                           
   487                           ;incstack = 0
   488                           ; Regs used in _press_Subir: [wreg+status,2+status,0]
   489  008A  0378               	decf	_banderaBoton,w
   490  008B  1D03               	btfss	3,2
   491  008C  28AB               	goto	l792
   492                           
   493                           ;Slave2_main.c: 115:         if (banderaUP == 0){
   494  008D  0876               	movf	_banderaUP,w
   495  008E  1D03               	btfss	3,2
   496  008F  28AB               	goto	l792
   497                           
   498                           ;Slave2_main.c: 116:             if (PORTBbits.RB5 == 0){
   499  0090  1283               	bcf	3,5	;RP0=0, select bank0
   500  0091  1303               	bcf	3,6	;RP1=0, select bank0
   501  0092  1A86               	btfsc	6,5	;volatile
   502  0093  28AB               	goto	l792
   503                           
   504                           ;Slave2_main.c: 117:                 _delay((unsigned long)((69)*(4000000/4000.0)));
   505  0094  305A               	movlw	90
   506  0095  00F4               	movwf	??_press_Subir+1
   507  0096  309B               	movlw	155
   508  0097  00F3               	movwf	??_press_Subir
   509  0098                     u277:	
   510  0098  0BF3               	decfsz	??_press_Subir,f
   511  0099  2898               	goto	u277
   512  009A  0BF4               	decfsz	??_press_Subir+1,f
   513  009B  2898               	goto	u277
   514                           
   515                           ;Slave2_main.c: 118:                 PORTA = PORTA + 1;
   516  009C  1283               	bcf	3,5	;RP0=0, select bank0
   517  009D  1303               	bcf	3,6	;RP1=0, select bank0
   518  009E  0805               	movf	5,w	;volatile
   519  009F  3E01               	addlw	1
   520  00A0  0085               	movwf	5	;volatile
   521                           
   522                           ;Slave2_main.c: 119:                 if (PORTA >= 15){
   523  00A1  300F               	movlw	15
   524  00A2  0205               	subwf	5,w	;volatile
   525  00A3  1C03               	skipc
   526  00A4  28A7               	goto	l786
   527                           
   528                           ;Slave2_main.c: 120:                     PORTA = 15;
   529  00A5  300F               	movlw	15
   530  00A6  0085               	movwf	5	;volatile
   531  00A7                     l786:	
   532                           
   533                           ;Slave2_main.c: 122:                 banderaBoton = 0;
   534  00A7  01F8               	clrf	_banderaBoton
   535                           
   536                           ;Slave2_main.c: 123:                 banderaUP = 1;
   537  00A8  01F6               	clrf	_banderaUP
   538  00A9  0AF6               	incf	_banderaUP,f
   539                           
   540                           ;Slave2_main.c: 124:                 INTCONbits.RBIE = 1;
   541  00AA  158B               	bsf	11,3	;volatile
   542  00AB                     l792:	
   543                           
   544                           ;Slave2_main.c: 128:     if (banderaUP == 1){
   545  00AB  0376               	decf	_banderaUP,w
   546  00AC  1D03               	btfss	3,2
   547  00AD  0008               	return
   548                           
   549                           ;Slave2_main.c: 129:         if (PORTBbits.RB5 == 1){
   550  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   551  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   552  00B0  1E86               	btfss	6,5	;volatile
   553  00B1  0008               	return
   554                           
   555                           ;Slave2_main.c: 130:         _delay((unsigned long)((69)*(4000000/4000.0)));
   556  00B2  305A               	movlw	90
   557  00B3  00F4               	movwf	??_press_Subir+1
   558  00B4  309B               	movlw	155
   559  00B5  00F3               	movwf	??_press_Subir
   560  00B6                     u287:	
   561  00B6  0BF3               	decfsz	??_press_Subir,f
   562  00B7  28B6               	goto	u287
   563  00B8  0BF4               	decfsz	??_press_Subir+1,f
   564  00B9  28B6               	goto	u287
   565                           
   566                           ;Slave2_main.c: 131:         banderaUP = 0;
   567  00BA  01F6               	clrf	_banderaUP
   568  00BB  0008               	return
   569  00BC                     __end_of_press_Subir:	
   570                           
   571                           	psect	text2
   572  0056                     __ptext2:	
   573 ;; *************** function _press_Bajar *****************
   574 ;; Defined at:
   575 ;;		line 136 in file "Slave2_main.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, status,2, status,0
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   589 ;;      Params:         0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0
   591 ;;      Temps:          2       0       0       0       0
   592 ;;      Totals:         2       0       0       0       0
   593 ;;Total ram usage:        2 bytes
   594 ;; Hardware stack levels used:    1
   595 ;; Hardware stack levels required when called:    1
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           
   604                           ;psect for function _press_Bajar
   605  0056                     _press_Bajar:	
   606                           
   607                           ;Slave2_main.c: 137:     if (banderaBoton == 1){
   608                           
   609                           ;incstack = 0
   610                           ; Regs used in _press_Bajar: [wreg+status,2+status,0]
   611  0056  0378               	decf	_banderaBoton,w
   612  0057  1D03               	btfss	3,2
   613  0058  2879               	goto	l820
   614                           
   615                           ;Slave2_main.c: 138:         if (banderaDO == 0){
   616  0059  0877               	movf	_banderaDO,w
   617  005A  1D03               	btfss	3,2
   618  005B  2879               	goto	l820
   619                           
   620                           ;Slave2_main.c: 139:             if (PORTBbits.RB4 == 0){
   621  005C  1283               	bcf	3,5	;RP0=0, select bank0
   622  005D  1303               	bcf	3,6	;RP1=0, select bank0
   623  005E  1A06               	btfsc	6,4	;volatile
   624  005F  2879               	goto	l820
   625                           
   626                           ;Slave2_main.c: 140:                 _delay((unsigned long)((69)*(4000000/4000.0)));
   627  0060  305A               	movlw	90
   628  0061  00F4               	movwf	??_press_Bajar+1
   629  0062  309B               	movlw	155
   630  0063  00F3               	movwf	??_press_Bajar
   631  0064                     u297:	
   632  0064  0BF3               	decfsz	??_press_Bajar,f
   633  0065  2864               	goto	u297
   634  0066  0BF4               	decfsz	??_press_Bajar+1,f
   635  0067  2864               	goto	u297
   636                           
   637                           ;Slave2_main.c: 141:                 PORTA = PORTA - 1;
   638  0068  1283               	bcf	3,5	;RP0=0, select bank0
   639  0069  1303               	bcf	3,6	;RP1=0, select bank0
   640  006A  0805               	movf	5,w	;volatile
   641  006B  3EFF               	addlw	255
   642  006C  0085               	movwf	5	;volatile
   643                           
   644                           ;Slave2_main.c: 142:                 if (PORTA == 0 || PORTA > 200){
   645  006D  0805               	movf	5,w	;volatile
   646  006E  1903               	btfsc	3,2
   647  006F  2874               	goto	l814
   648  0070  30C9               	movlw	201
   649  0071  0205               	subwf	5,w	;volatile
   650  0072  1C03               	skipc
   651  0073  2875               	goto	l90
   652  0074                     l814:	
   653                           
   654                           ;Slave2_main.c: 143:                     PORTA = 0;
   655  0074  0185               	clrf	5	;volatile
   656  0075                     l90:	
   657                           ;Slave2_main.c: 144:                 }
   658                           
   659                           
   660                           ;Slave2_main.c: 145:                 banderaBoton = 0;
   661  0075  01F8               	clrf	_banderaBoton
   662                           
   663                           ;Slave2_main.c: 146:                 banderaDO = 1;
   664  0076  01F7               	clrf	_banderaDO
   665  0077  0AF7               	incf	_banderaDO,f
   666                           
   667                           ;Slave2_main.c: 147:                 INTCONbits.RBIE = 1;
   668  0078  158B               	bsf	11,3	;volatile
   669  0079                     l820:	
   670                           
   671                           ;Slave2_main.c: 151:     if (banderaDO == 1){
   672  0079  0377               	decf	_banderaDO,w
   673  007A  1D03               	btfss	3,2
   674  007B  0008               	return
   675                           
   676                           ;Slave2_main.c: 152:         if (PORTBbits.RB4 == 1){
   677  007C  1283               	bcf	3,5	;RP0=0, select bank0
   678  007D  1303               	bcf	3,6	;RP1=0, select bank0
   679  007E  1E06               	btfss	6,4	;volatile
   680  007F  0008               	return
   681                           
   682                           ;Slave2_main.c: 153:         _delay((unsigned long)((69)*(4000000/4000.0)));
   683  0080  305A               	movlw	90
   684  0081  00F4               	movwf	??_press_Bajar+1
   685  0082  309B               	movlw	155
   686  0083  00F3               	movwf	??_press_Bajar
   687  0084                     u307:	
   688  0084  0BF3               	decfsz	??_press_Bajar,f
   689  0085  2884               	goto	u307
   690  0086  0BF4               	decfsz	??_press_Bajar+1,f
   691  0087  2884               	goto	u307
   692                           
   693                           ;Slave2_main.c: 154:         banderaDO = 0;
   694  0088  01F7               	clrf	_banderaDO
   695  0089  0008               	return
   696  008A                     __end_of_press_Bajar:	
   697                           
   698                           	psect	text3
   699  00ED                     __ptext3:	
   700 ;; *************** function _config_PUERTOS *****************
   701 ;; Defined at:
   702 ;;		line 97 in file "Slave2_main.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;		None
   705 ;; Auto vars:     Size  Location     Type
   706 ;;		None
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, status,2
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   716 ;;      Params:         0       0       0       0       0
   717 ;;      Locals:         0       0       0       0       0
   718 ;;      Temps:          0       0       0       0       0
   719 ;;      Totals:         0       0       0       0       0
   720 ;;Total ram usage:        0 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; Hardware stack levels required when called:    1
   723 ;; This function calls:
   724 ;;		Nothing
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           
   731                           ;psect for function _config_PUERTOS
   732  00ED                     _config_PUERTOS:	
   733                           
   734                           ;Slave2_main.c: 99:     TRISA = 0;
   735                           
   736                           ;incstack = 0
   737                           ; Regs used in _config_PUERTOS: [wreg+status,2]
   738  00ED  1683               	bsf	3,5	;RP0=1, select bank1
   739  00EE  1303               	bcf	3,6	;RP1=0, select bank1
   740  00EF  0185               	clrf	5	;volatile
   741                           
   742                           ;Slave2_main.c: 100:     TRISB = 0b00110000;
   743  00F0  3030               	movlw	48
   744  00F1  0086               	movwf	6	;volatile
   745                           
   746                           ;Slave2_main.c: 101:     PORTA = 0;
   747  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   748  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   749  00F4  0185               	clrf	5	;volatile
   750                           
   751                           ;Slave2_main.c: 102:     ANSEL = 0;
   752  00F5  1683               	bsf	3,5	;RP0=1, select bank3
   753  00F6  1703               	bsf	3,6	;RP1=1, select bank3
   754  00F7  0188               	clrf	8	;volatile
   755                           
   756                           ;Slave2_main.c: 103:     ANSELH = 0;
   757  00F8  0189               	clrf	9	;volatile
   758                           
   759                           ;Slave2_main.c: 104:     WPUB = 0b00110000;
   760  00F9  3030               	movlw	48
   761  00FA  1683               	bsf	3,5	;RP0=1, select bank1
   762  00FB  1303               	bcf	3,6	;RP1=0, select bank1
   763  00FC  0095               	movwf	21	;volatile
   764                           
   765                           ;Slave2_main.c: 105:     OPTION_REGbits.nRBPU = 0;
   766  00FD  1381               	bcf	1,7	;volatile
   767                           
   768                           ;Slave2_main.c: 108:     IOCB = 0b00110000;;
   769  00FE  3030               	movlw	48
   770  00FF  0096               	movwf	22	;volatile
   771                           
   772                           ;Slave2_main.c: 109:     INTCONbits.RBIE = 1;
   773  0100  158B               	bsf	11,3	;volatile
   774  0101  0008               	return
   775  0102                     __end_of_config_PUERTOS:	
   776                           
   777                           	psect	text4
   778  00BC                     __ptext4:	
   779 ;; *************** function _I2C_Slave_Init *****************
   780 ;; Defined at:
   781 ;;		line 93 in file "I2C.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;  address         1    wreg     unsigned char 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  address         1    3[COMMON] unsigned char 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   795 ;;      Params:         0       0       0       0       0
   796 ;;      Locals:         1       0       0       0       0
   797 ;;      Temps:          0       0       0       0       0
   798 ;;      Totals:         1       0       0       0       0
   799 ;;Total ram usage:        1 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    1
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           
   810                           ;psect for function _I2C_Slave_Init
   811  00BC                     _I2C_Slave_Init:	
   812                           
   813                           ;incstack = 0
   814                           ; Regs used in _I2C_Slave_Init: [wreg]
   815                           ;I2C_Slave_Init@address stored from wreg
   816  00BC  00F3               	movwf	I2C_Slave_Init@address
   817                           
   818                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   819  00BD  0873               	movf	I2C_Slave_Init@address,w
   820  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   821  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   822  00C0  0093               	movwf	19	;volatile
   823                           
   824                           ;I2C.c: 96:     SSPCON = 0x36;
   825  00C1  3036               	movlw	54
   826  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   827  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   828  00C4  0094               	movwf	20	;volatile
   829                           
   830                           ;I2C.c: 97:     SSPSTAT = 0x80;
   831  00C5  3080               	movlw	128
   832  00C6  1683               	bsf	3,5	;RP0=1, select bank1
   833  00C7  1303               	bcf	3,6	;RP1=0, select bank1
   834  00C8  0094               	movwf	20	;volatile
   835                           
   836                           ;I2C.c: 98:     SSPCON2 = 0x01;
   837  00C9  3001               	movlw	1
   838  00CA  0091               	movwf	17	;volatile
   839                           
   840                           ;I2C.c: 99:     TRISC3 = 1;
   841  00CB  1587               	bsf	7,3	;volatile
   842                           
   843                           ;I2C.c: 100:     TRISC4 = 1;
   844  00CC  1607               	bsf	7,4	;volatile
   845                           
   846                           ;I2C.c: 101:     GIE = 1;
   847  00CD  178B               	bsf	11,7	;volatile
   848                           
   849                           ;I2C.c: 102:     PEIE = 1;
   850  00CE  170B               	bsf	11,6	;volatile
   851                           
   852                           ;I2C.c: 103:     SSPIF = 0;
   853  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   854  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   855  00D1  118C               	bcf	12,3	;volatile
   856                           
   857                           ;I2C.c: 104:     SSPIE = 1;
   858  00D2  1683               	bsf	3,5	;RP0=1, select bank1
   859  00D3  1303               	bcf	3,6	;RP1=0, select bank1
   860  00D4  158C               	bsf	12,3	;volatile
   861  00D5  0008               	return
   862  00D6                     __end_of_I2C_Slave_Init:	
   863                           
   864                           	psect	text5
   865  0017                     __ptext5:	
   866 ;; *************** function _ISR *****************
   867 ;; Defined at:
   868 ;;		line 39 in file "Slave2_main.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   882 ;;      Params:         0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0
   884 ;;      Temps:          3       0       0       0       0
   885 ;;      Totals:         3       0       0       0       0
   886 ;;Total ram usage:        3 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		Interrupt level 1
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           
   896                           ;psect for function _ISR
   897  0017                     _ISR:	
   898                           
   899                           ;Slave2_main.c: 40:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
   900  0017  180B               	btfsc	11,0	;volatile
   901  0018  1D8B               	btfss	11,3	;volatile
   902  0019  2821               	goto	i1l53
   903                           
   904                           ;Slave2_main.c: 41:         INTCONbits.RBIF = 0;
   905  001A  100B               	bcf	11,0	;volatile
   906                           
   907                           ;Slave2_main.c: 42:         if (banderaBoton == 0){
   908  001B  0878               	movf	_banderaBoton,w
   909  001C  1D03               	btfss	3,2
   910  001D  2821               	goto	i1l53
   911                           
   912                           ;Slave2_main.c: 43:             banderaBoton = 1;
   913  001E  01F8               	clrf	_banderaBoton
   914  001F  0AF8               	incf	_banderaBoton,f
   915                           
   916                           ;Slave2_main.c: 44:             INTCONbits.RBIE = 0;
   917  0020  118B               	bcf	11,3	;volatile
   918  0021                     i1l53:	
   919                           ;Slave2_main.c: 46:     }
   920                           
   921                           
   922                           ;Slave2_main.c: 48:     if(PIR1bits.SSPIF == 1){
   923  0021  1283               	bcf	3,5	;RP0=0, select bank0
   924  0022  1303               	bcf	3,6	;RP1=0, select bank0
   925  0023  1D8C               	btfss	12,3	;volatile
   926  0024  284F               	goto	i1l64
   927                           
   928                           ;Slave2_main.c: 50:         SSPCONbits.CKP = 0;
   929  0025  1214               	bcf	20,4	;volatile
   930                           
   931                           ;Slave2_main.c: 52:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   932  0026  1B14               	btfsc	20,6	;volatile
   933  0027  282A               	goto	i1l846
   934  0028  1F94               	btfss	20,7	;volatile
   935  0029  2832               	goto	i1l56
   936  002A                     i1l846:	
   937                           
   938                           ;Slave2_main.c: 53:             z = SSPBUF;
   939  002A  0813               	movf	19,w	;volatile
   940  002B  00F0               	movwf	??_ISR
   941  002C  0870               	movf	??_ISR,w
   942  002D  00F5               	movwf	_z
   943                           
   944                           ;Slave2_main.c: 54:             SSPCONbits.SSPOV = 0;
   945  002E  1314               	bcf	20,6	;volatile
   946                           
   947                           ;Slave2_main.c: 55:             SSPCONbits.WCOL = 0;
   948  002F  1394               	bcf	20,7	;volatile
   949                           
   950                           ;Slave2_main.c: 56:             SSPCONbits.CKP = 1;
   951  0030  1614               	bsf	20,4	;volatile
   952                           
   953                           ;Slave2_main.c: 57:         }
   954  0031  284D               	goto	i1l59
   955  0032                     i1l56:	
   956                           ;Slave2_main.c: 69:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   957                           
   958  0032  1683               	bsf	3,5	;RP0=1, select bank1
   959  0033  1303               	bcf	3,6	;RP1=0, select bank1
   960  0034  1E94               	btfss	20,5	;volatile
   961  0035  1D14               	btfss	20,2	;volatile
   962  0036  284D               	goto	i1l59
   963                           
   964                           ;Slave2_main.c: 70:             z = SSPBUF;
   965  0037  1283               	bcf	3,5	;RP0=0, select bank0
   966  0038  1303               	bcf	3,6	;RP1=0, select bank0
   967  0039  0813               	movf	19,w	;volatile
   968  003A  00F0               	movwf	??_ISR
   969  003B  0870               	movf	??_ISR,w
   970  003C  00F5               	movwf	_z
   971                           
   972                           ;Slave2_main.c: 71:             BF = 0;
   973  003D  1683               	bsf	3,5	;RP0=1, select bank1
   974  003E  1303               	bcf	3,6	;RP1=0, select bank1
   975  003F  1014               	bcf	20,0	;volatile
   976                           
   977                           ;Slave2_main.c: 72:             SSPBUF = PORTA;
   978  0040  1283               	bcf	3,5	;RP0=0, select bank0
   979  0041  1303               	bcf	3,6	;RP1=0, select bank0
   980  0042  0805               	movf	5,w	;volatile
   981  0043  0093               	movwf	19	;volatile
   982                           
   983                           ;Slave2_main.c: 73:             SSPCONbits.CKP = 1;
   984  0044  1614               	bsf	20,4	;volatile
   985                           
   986                           ;Slave2_main.c: 74:             _delay((unsigned long)((250)*(4000000/4000000.0)));
   987  0045  3053               	movlw	83
   988  0046  00F0               	movwf	??_ISR
   989  0047                     u31_27:	
   990  0047  0BF0               	decfsz	??_ISR,f
   991  0048  2847               	goto	u31_27
   992  0049                     i1l61:	
   993                           ;Slave2_main.c: 75:             while(SSPSTATbits.BF);
   994                           
   995  0049  1683               	bsf	3,5	;RP0=1, select bank1
   996  004A  1303               	bcf	3,6	;RP1=0, select bank1
   997  004B  1814               	btfsc	20,0	;volatile
   998  004C  2849               	goto	i1l61
   999  004D                     i1l59:	
  1000                           
  1001                           ;Slave2_main.c: 78:         PIR1bits.SSPIF = 0;
  1002  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1003  004E  118C               	bcf	12,3	;volatile
  1004  004F                     i1l64:	
  1005  004F  0872               	movf	??_ISR+2,w
  1006  0050  008A               	movwf	10
  1007  0051  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
  1008  0052  0083               	movwf	3
  1009  0053  0EFE               	swapf	126,f
  1010  0054  0E7E               	swapf	126,w
  1011  0055  0009               	retfie
  1012  0056                     __end_of_ISR:	
  1013  007E                     btemp	set	126	;btemp
  1014  007E                     wtemp0	set	126
  1015                           
  1016                           	psect	intentry
  1017  0004                     __pintentry:	
  1018                           ;incstack = 0
  1019                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1020                           
  1021  0004                     interrupt_function:	
  1022  007E                     saved_w	set	btemp
  1023  0004  00FE               	movwf	btemp
  1024  0005  0E03               	swapf	3,w
  1025  0006  00F1               	movwf	??_ISR+1
  1026  0007  080A               	movf	10,w
  1027  0008  00F2               	movwf	??_ISR+2
  1028  0009  120A  118A  2817   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_press_Bajar
    _main->_press_Subir

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                     _I2C_Slave_Init
                     _config_PUERTOS
                        _press_Bajar
                        _press_Subir
 ---------------------------------------------------------------------------------
 (1) _press_Subir                                          2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _press_Bajar                                          2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_PUERTOS                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _config_PUERTOS
   _press_Bajar
   _press_Subir

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb 22 16:27:35 2020

                       _z 0075               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l90 0075                        l69 00E2  
                     l820 0079                       l814 0074                       l792 00AB  
                     l786 00A7                       _GIE 005F                       u307 0084  
            __CFG_CPD$OFF 0000                       _ISR 0017                       u277 0098  
                     u287 00B6                       u297 0064              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      _IOCB 0096                      _PEIE 005E  
                    i1l61 0049                      i1l53 0021                      i1l56 0032  
                    i1l64 004F                      i1l59 004D                      _WPUB 0095  
            __CFG_WRT$OFF 0000                      _main 00D6                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l846 002A                     u31_27 0047                     _PORTA 0005  
                   _TRISA 0085                     _TRISB 0086                     _SSPIE 0463  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 00ED  
                  ??_main 0075                    _ANSELH 0189          ??_config_PUERTOS 0073  
            _banderaBoton 0078                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPBUF 0013                    _SSPCON 0014  
          __CFG_PWRTE$OFF 0000              ?_press_Bajar 0070                    saved_w 007E  
            ?_press_Subir 0070   __end_of__initialization 0013            __pcstackCOMMON 0070  
 __size_of_I2C_Slave_Init 001A            _OPTION_REGbits 0081     I2C_Slave_Init@address 0073  
              __pmaintext 00D6                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094                   __ptext1 008A                   __ptext2 0056  
                 __ptext3 00ED                   __ptext4 00BC                   __ptext5 0017  
            __size_of_ISR 003F      __size_of_press_Bajar 0034      end_of_initialization 0013  
    __size_of_press_Subir 0032            _I2C_Slave_Init 00BC                 _PORTBbits 0006  
               _TRISCbits 0087    __end_of_I2C_Slave_Init 00D6       start_initialization 000F  
             __end_of_ISR 0056  __CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0070  
 __size_of_config_PUERTOS 0015               __pbssCOMMON 0075                 ___latbits 0002  
               _banderaDO 0077                 _banderaUP 0076         interrupt_function 0004  
                _PIR1bits 000C             ??_press_Bajar 0073             ??_press_Subir 0073  
          _config_PUERTOS 00ED         __CFG_BOR4V$BOR40V 0000       __end_of_press_Bajar 008A  
        ??_I2C_Slave_Init 0073       __end_of_press_Subir 00BC             __size_of_main 0017  
  __end_of_config_PUERTOS 0102                _INTCONbits 000B                  intlevel1 0000  
         ?_config_PUERTOS 0070               _press_Bajar 0056               _SSPCON2bits 0091  
             _press_Subir 008A                _SSPCONbits 0014  
