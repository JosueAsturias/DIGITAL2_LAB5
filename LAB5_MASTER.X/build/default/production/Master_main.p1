Version 4.0 HI-TECH Software Intermediate Code
[p mainexit ]
"1602 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1602: extern volatile unsigned char TRISD __attribute__((address(0x088)));
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"4448
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 4448: extern volatile __bit TRISC0 __attribute__((address(0x438)));
[v _TRISC0 `Vb ~T0 @X0 0 e@1080 ]
"4451
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 4451: extern volatile __bit TRISC1 __attribute__((address(0x439)));
[v _TRISC1 `Vb ~T0 @X0 0 e@1081 ]
"19 ./LCD_8bits.h
[; ;./LCD_8bits.h: 19: void LCD_init(void);
[v _LCD_init `(v ~T0 @X0 0 ef ]
"17
[; ;./LCD_8bits.h: 17: void LCD_clear(void);
[v _LCD_clear `(v ~T0 @X0 0 ef ]
"22
[; ;./LCD_8bits.h: 22: void LCD_Set_Cursor(uint8_t linea, uint8_t columna);
[v _LCD_Set_Cursor `(v ~T0 @X0 0 ef2`uc`uc ]
"21
[; ;./LCD_8bits.h: 21: void LCD_Write_String(char *a);
[v _LCD_Write_String `(v ~T0 @X0 0 ef1`*uc ]
"28 ./I2C.h
[; ;./I2C.h: 28: void I2C_Master_Init(const unsigned long c);
[v _I2C_Master_Init `(v ~T0 @X0 0 ef1`Cul ]
"40
[; ;./I2C.h: 40: void I2C_Master_Start(void);
[v _I2C_Master_Start `(v ~T0 @X0 0 ef ]
"54
[; ;./I2C.h: 54: void I2C_Master_Write(unsigned d);
[v _I2C_Master_Write `(v ~T0 @X0 0 ef1`ui ]
"59
[; ;./I2C.h: 59: unsigned short I2C_Master_Read(unsigned short a);
[v _I2C_Master_Read `(us ~T0 @X0 0 ef1`us ]
"48
[; ;./I2C.h: 48: void I2C_Master_Stop(void);
[v _I2C_Master_Stop `(v ~T0 @X0 0 ef ]
[v F1256 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic.h
[v __delay `JF1256 ~T0 @X0 0 e ]
[p i __delay ]
"31 ./RTC.h
[; ;./RTC.h: 31: uint8_t get_Temp();
[v _get_Temp `(uc ~T0 @X0 0 e? ]
"20 ./LCD_8bits.h
[; ;./LCD_8bits.h: 20: void LCD_Write_Character(char caracter);
[v _LCD_Write_Character `(v ~T0 @X0 0 ef1`uc ]
"28
[; ;./LCD_8bits.h: 28: uint16_t * uint_to_array(uint8_t numero);
[v _uint_to_array `(*ui ~T0 @X0 0 ef1`uc ]
"27
[; ;./LCD_8bits.h: 27: char uint_to_char(uint8_t numero);
[v _uint_to_char `(uc ~T0 @X0 0 ef1`uc ]
"45 Master_main.c
[; ;Master_main.c: 45: uint16_t * mapear(uint8_t valor, uint8_t limReal, uint8_t limSup);
[v _mapear `(*ui ~T0 @X0 0 ef3`uc`uc`uc ]
"8 Master_main.c
[p x FOSC = INTRC_NOCLKOUT ]
"9
[p x WDTE = OFF ]
"10
[p x PWRTE = OFF ]
"11
[p x MCLRE = OFF ]
"12
[p x CP = OFF ]
"13
[p x CPD = OFF ]
"14
[p x BOREN = OFF ]
"15
[p x IESO = OFF ]
"16
[p x FCMEN = OFF ]
"17
[p x LVP = OFF ]
"20
[p x BOR4V = BOR40V ]
"21
[p x WRT = OFF ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 354: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"416
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 416: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"454
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 454: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"461
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 461: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"539
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 539: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"595
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 595: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"652
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 652: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"659
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 659: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 666: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"673
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 673: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"767
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 767: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"774
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 774: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"845
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 845: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"852
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 852: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"922
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 922: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 929: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"936
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 936: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"943
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 943: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1040
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1040: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1135
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1135: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1142
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1142: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1149
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1149: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1156
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1156: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1163
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1163: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1170
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1170: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1240
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1240: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1247: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1348: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1418: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1480
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1480: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1542
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1542: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1604
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1604: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1666: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1704
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1704: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1760
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1760: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1817: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1864
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1864: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1929: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1981
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 1981: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2043
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2043: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2050
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2050: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2057
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2057: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2062
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2062: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2179
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2179: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2348: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2418: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2488
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2488: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2558
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2558: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2644
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2644: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2706
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2706: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2776
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2776: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2846
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2846: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2928
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2928: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2972
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2972: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2979
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 2979: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3013
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3013: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3066
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3066: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3131
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3131: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3196
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3196: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3247: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3252
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3252: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3259
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3259: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3266
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3266: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3273
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3273: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3280: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3337
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3337: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3389
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3389: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3451
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3451: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3501: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3546
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f887.h: 3546: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"32 Master_main.c
[; ;Master_main.c: 32: int seg = 0;
[v _seg `i ~T0 @X0 1 e ]
[i _seg
-> 0 `i
]
"33
[; ;Master_main.c: 33: int min = 0;
[v _min `i ~T0 @X0 1 e ]
[i _min
-> 0 `i
]
"34
[; ;Master_main.c: 34: int hora = 0;
[v _hora `i ~T0 @X0 1 e ]
[i _hora
-> 0 `i
]
"35
[; ;Master_main.c: 35: int dia = 1;
[v _dia `i ~T0 @X0 1 e ]
[i _dia
-> 1 `i
]
"36
[; ;Master_main.c: 36: int datum = 23;
[v _datum `i ~T0 @X0 1 e ]
[i _datum
-> 23 `i
]
"37
[; ;Master_main.c: 37: int mes = 2;
[v _mes `i ~T0 @X0 1 e ]
[i _mes
-> 2 `i
]
"38
[; ;Master_main.c: 38: int jahr = 20;
[v _jahr `i ~T0 @X0 1 e ]
[i _jahr
-> 20 `i
]
"40
[; ;Master_main.c: 40: uint8_t valorADC = 0;
[v _valorADC `uc ~T0 @X0 1 e ]
[i _valorADC
-> -> 0 `i `uc
]
"41
[; ;Master_main.c: 41: uint8_t contador = 0;
[v _contador `uc ~T0 @X0 1 e ]
[i _contador
-> -> 0 `i `uc
]
"42
[; ;Master_main.c: 42: uint16_t * voltaje_map;
[v _voltaje_map `*ui ~T0 @X0 1 e ]
"43
[; ;Master_main.c: 43: uint16_t * temp_array;
[v _temp_array `*ui ~T0 @X0 1 e ]
[v $root$_main `(v ~T0 @X0 0 e ]
"49
[; ;Master_main.c: 49: void main(void) {
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"50
[; ;Master_main.c: 50:     TRISD = 0;
[e = _TRISD -> -> 0 `i `uc ]
"51
[; ;Master_main.c: 51:     TRISC0 = 0;
[e = _TRISC0 -> -> 0 `i `b ]
"52
[; ;Master_main.c: 52:     TRISC1 = 0;
[e = _TRISC1 -> -> 0 `i `b ]
"53
[; ;Master_main.c: 53:     LCD_init();
[e ( _LCD_init ..  ]
"54
[; ;Master_main.c: 54:     LCD_clear();
[e ( _LCD_clear ..  ]
"55
[; ;Master_main.c: 55:     LCD_Set_Cursor(1,1);
[e ( _LCD_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"56
[; ;Master_main.c: 56:     LCD_Write_String("S1:  S2:   S3:");
[e ( _LCD_Write_String (1 :s 1C ]
"57
[; ;Master_main.c: 57:     LCD_Set_Cursor(2,6);
[e ( _LCD_Set_Cursor (2 , -> -> 2 `i `uc -> -> 6 `i `uc ]
"58
[; ;Master_main.c: 58:     LCD_Write_String("0x");
[e ( _LCD_Write_String (1 :s 2C ]
"59
[; ;Master_main.c: 59:     I2C_Master_Init(100000);
[e ( _I2C_Master_Init (1 -> -> 100000 `l `ul ]
"65
[; ;Master_main.c: 65:     while(1){
[e :U 140 ]
{
"66
[; ;Master_main.c: 66:         I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"67
[; ;Master_main.c: 67:         I2C_Master_Write(0x61);
[e ( _I2C_Master_Write (1 -> -> 97 `i `ui ]
"68
[; ;Master_main.c: 68:         valorADC = I2C_Master_Read(0);
[e = _valorADC -> ( _I2C_Master_Read (1 -> -> 0 `i `us `uc ]
"69
[; ;Master_main.c: 69:         I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"70
[; ;Master_main.c: 70:         _delay((unsigned long)((10)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"72
[; ;Master_main.c: 72:         I2C_Master_Start();
[e ( _I2C_Master_Start ..  ]
"73
[; ;Master_main.c: 73:         I2C_Master_Write(0x71);
[e ( _I2C_Master_Write (1 -> -> 113 `i `ui ]
"74
[; ;Master_main.c: 74:         contador = I2C_Master_Read(0);
[e = _contador -> ( _I2C_Master_Read (1 -> -> 0 `i `us `uc ]
"75
[; ;Master_main.c: 75:         I2C_Master_Stop();
[e ( _I2C_Master_Stop ..  ]
"76
[; ;Master_main.c: 76:         _delay((unsigned long)((10)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"78
[; ;Master_main.c: 78:         uint8_t temperatura = get_Temp();
[v _temperatura `uc ~T0 @X0 1 a ]
[e = _temperatura ( _get_Temp ..  ]
"79
[; ;Master_main.c: 79:         uint8_t signo = temperatura & 0b10000000;
[v _signo `uc ~T0 @X0 1 a ]
[e = _signo -> & -> _temperatura `i -> 128 `i `uc ]
"80
[; ;Master_main.c: 80:         LCD_Set_Cursor(2,11);
[e ( _LCD_Set_Cursor (2 , -> -> 2 `i `uc -> -> 11 `i `uc ]
"81
[; ;Master_main.c: 81:         if (signo){ LCD_Write_Character('-'); }
[e $ ! != -> _signo `i -> 0 `i 142  ]
{
[e ( _LCD_Write_Character (1 -> -> 45 `ui `uc ]
}
[e $U 143  ]
"82
[; ;Master_main.c: 82:         else{ LCD_Write_Character(' '); }
[e :U 142 ]
{
[e ( _LCD_Write_Character (1 -> -> 32 `ui `uc ]
}
[e :U 143 ]
"84
[; ;Master_main.c: 84:         temp_array = uint_to_array(temperatura & 0b01111111);
[e = _temp_array ( _uint_to_array (1 -> & -> _temperatura `i -> 127 `i `uc ]
"85
[; ;Master_main.c: 85:         LCD_Write_Character(uint_to_char(temp_array[1]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _temp_array * -> -> 1 `i `x -> -> # *U _temp_array `i `x `uc ]
"86
[; ;Master_main.c: 86:         LCD_Write_Character(uint_to_char(temp_array[2]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _temp_array * -> -> 2 `i `x -> -> # *U _temp_array `i `x `uc ]
"87
[; ;Master_main.c: 87:         LCD_Write_Character(223);
[e ( _LCD_Write_Character (1 -> -> 223 `i `uc ]
"88
[; ;Master_main.c: 88:         LCD_Write_Character('C');
[e ( _LCD_Write_Character (1 -> -> 67 `ui `uc ]
"93
[; ;Master_main.c: 93:         voltaje_map = mapear(valorADC, 255, 5);
[e = _voltaje_map ( _mapear (3 , , _valorADC -> -> 255 `i `uc -> -> 5 `i `uc ]
"94
[; ;Master_main.c: 94:         LCD_Set_Cursor(2,0);
[e ( _LCD_Set_Cursor (2 , -> -> 2 `i `uc -> -> 0 `i `uc ]
"95
[; ;Master_main.c: 95:         LCD_Write_Character(uint_to_char(voltaje_map[0]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _voltaje_map * -> -> 0 `i `x -> -> # *U _voltaje_map `i `x `uc ]
"96
[; ;Master_main.c: 96:         LCD_Write_Character('.');
[e ( _LCD_Write_Character (1 -> -> 46 `ui `uc ]
"97
[; ;Master_main.c: 97:         LCD_Write_Character(uint_to_char(voltaje_map[1]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _voltaje_map * -> -> 1 `i `x -> -> # *U _voltaje_map `i `x `uc ]
"98
[; ;Master_main.c: 98:         LCD_Write_Character(uint_to_char(voltaje_map[2]));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _voltaje_map * -> -> 2 `i `x -> -> # *U _voltaje_map `i `x `uc ]
"99
[; ;Master_main.c: 99:         LCD_Write_Character('V');
[e ( _LCD_Write_Character (1 -> -> 86 `ui `uc ]
"101
[; ;Master_main.c: 101:         LCD_Set_Cursor(2,8);
[e ( _LCD_Set_Cursor (2 , -> -> 2 `i `uc -> -> 8 `i `uc ]
"102
[; ;Master_main.c: 102:         LCD_Write_Character(uint_to_char(contador));
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 _contador ]
"105
[; ;Master_main.c: 105:     }
}
[e :U 139 ]
[e $U 140  ]
[e :U 141 ]
"106
[; ;Master_main.c: 106:     return;
[e $UE 138  ]
"107
[; ;Master_main.c: 107: }
[e :UE 138 ]
}
"112
[; ;Master_main.c: 112: uint16_t * mapear(uint8_t valor, uint8_t limReal, uint8_t limSup){
[v _mapear `(*ui ~T0 @X0 1 ef3`uc`uc`uc ]
{
[e :U _mapear ]
[v _valor `uc ~T0 @X0 1 r1 ]
[v _limReal `uc ~T0 @X0 1 r2 ]
[v _limSup `uc ~T0 @X0 1 r3 ]
[f ]
[v F1358 `ui ~T0 @X0 -> 3 `i s ]
[i F1358
:U ..
"113
[; ;Master_main.c: 113:     uint16_t resultado[3] = {0,0,0};
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
]
[v _resultado `ui ~T0 @X0 -> 3 `i a ]
[e = _resultado F1358 ]
"114
[; ;Master_main.c: 114:     uint16_t dividendo = valor*limSup;
[v _dividendo `ui ~T0 @X0 1 a ]
[e = _dividendo -> * -> _valor `i -> _limSup `i `ui ]
"115
[; ;Master_main.c: 115:     while (limReal <= dividendo){
[e $U 145  ]
[e :U 146 ]
{
"116
[; ;Master_main.c: 116:         resultado[0] = resultado[0] + 1;
[e = *U + &U _resultado * -> -> -> 0 `i `ui `ux -> -> # *U &U _resultado `ui `ux + *U + &U _resultado * -> -> -> 0 `i `ui `ux -> -> # *U &U _resultado `ui `ux -> -> 1 `i `ui ]
"117
[; ;Master_main.c: 117:         dividendo = dividendo - limReal;
[e = _dividendo - _dividendo -> _limReal `ui ]
"118
[; ;Master_main.c: 118:     }
}
[e :U 145 ]
"115
[; ;Master_main.c: 115:     while (limReal <= dividendo){
[e $ <= -> _limReal `ui _dividendo 146  ]
[e :U 147 ]
"119
[; ;Master_main.c: 119:     dividendo = dividendo *10;
[e = _dividendo * _dividendo -> -> 10 `i `ui ]
"120
[; ;Master_main.c: 120:     while (limReal <= dividendo){
[e $U 148  ]
[e :U 149 ]
{
"121
[; ;Master_main.c: 121:         resultado[1] = resultado[1] +1;
[e = *U + &U _resultado * -> -> -> 1 `i `ui `ux -> -> # *U &U _resultado `ui `ux + *U + &U _resultado * -> -> -> 1 `i `ui `ux -> -> # *U &U _resultado `ui `ux -> -> 1 `i `ui ]
"122
[; ;Master_main.c: 122:         dividendo = dividendo - limReal;
[e = _dividendo - _dividendo -> _limReal `ui ]
"123
[; ;Master_main.c: 123:     }
}
[e :U 148 ]
"120
[; ;Master_main.c: 120:     while (limReal <= dividendo){
[e $ <= -> _limReal `ui _dividendo 149  ]
[e :U 150 ]
"124
[; ;Master_main.c: 124:     dividendo = dividendo *10;
[e = _dividendo * _dividendo -> -> 10 `i `ui ]
"125
[; ;Master_main.c: 125:     while (limReal <= dividendo){
[e $U 151  ]
[e :U 152 ]
{
"126
[; ;Master_main.c: 126:         resultado[2] = resultado[2] +1;
[e = *U + &U _resultado * -> -> -> 2 `i `ui `ux -> -> # *U &U _resultado `ui `ux + *U + &U _resultado * -> -> -> 2 `i `ui `ux -> -> # *U &U _resultado `ui `ux -> -> 1 `i `ui ]
"127
[; ;Master_main.c: 127:         dividendo = dividendo - limReal;
[e = _dividendo - _dividendo -> _limReal `ui ]
"128
[; ;Master_main.c: 128:     }
}
[e :U 151 ]
"125
[; ;Master_main.c: 125:     while (limReal <= dividendo){
[e $ <= -> _limReal `ui _dividendo 152  ]
[e :U 153 ]
"130
[; ;Master_main.c: 130:     return(resultado);
[e ) &U _resultado ]
[e $UE 144  ]
"131
[; ;Master_main.c: 131: }
[e :UE 144 ]
}
"134
[; ;Master_main.c: 134: void display_Uhrzeit(uint8_t fila, uint8_t columna){
[v _display_Uhrzeit `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _display_Uhrzeit ]
[v _fila `uc ~T0 @X0 1 r1 ]
[v _columna `uc ~T0 @X0 1 r2 ]
[f ]
"135
[; ;Master_main.c: 135:     char seg_u = seg%10;
[v _seg_u `uc ~T0 @X0 1 a ]
[e = _seg_u -> % _seg -> 10 `i `uc ]
"136
[; ;Master_main.c: 136:     char seg_d = seg/10;
[v _seg_d `uc ~T0 @X0 1 a ]
[e = _seg_d -> / _seg -> 10 `i `uc ]
"137
[; ;Master_main.c: 137:     char min_u = min%10;
[v _min_u `uc ~T0 @X0 1 a ]
[e = _min_u -> % _min -> 10 `i `uc ]
"138
[; ;Master_main.c: 138:     char min_d = min/10;
[v _min_d `uc ~T0 @X0 1 a ]
[e = _min_d -> / _min -> 10 `i `uc ]
"139
[; ;Master_main.c: 139:     char Uhr_u = hora%10;
[v _Uhr_u `uc ~T0 @X0 1 a ]
[e = _Uhr_u -> % _hora -> 10 `i `uc ]
"140
[; ;Master_main.c: 140:     char Uhr_d = hora/10;
[v _Uhr_d `uc ~T0 @X0 1 a ]
[e = _Uhr_d -> / _hora -> 10 `i `uc ]
"142
[; ;Master_main.c: 142:     LCD_Set_Cursor(fila, columna);
[e ( _LCD_Set_Cursor (2 , _fila _columna ]
"143
[; ;Master_main.c: 143:     LCD_Write_Character(seg_d + '0');
[e ( _LCD_Write_Character (1 -> + -> _seg_d `ui -> 48 `ui `uc ]
"144
[; ;Master_main.c: 144:     LCD_Write_Character(seg_u + '0');
[e ( _LCD_Write_Character (1 -> + -> _seg_u `ui -> 48 `ui `uc ]
"145
[; ;Master_main.c: 145:     LCD_Write_Character(':');
[e ( _LCD_Write_Character (1 -> -> 58 `ui `uc ]
"146
[; ;Master_main.c: 146:     LCD_Write_Character(min_d + '0');
[e ( _LCD_Write_Character (1 -> + -> _min_d `ui -> 48 `ui `uc ]
"147
[; ;Master_main.c: 147:     LCD_Write_Character(min_u + '0');
[e ( _LCD_Write_Character (1 -> + -> _min_u `ui -> 48 `ui `uc ]
"148
[; ;Master_main.c: 148:     LCD_Write_Character(min_d + '0');
[e ( _LCD_Write_Character (1 -> + -> _min_d `ui -> 48 `ui `uc ]
"149
[; ;Master_main.c: 149:     LCD_Write_Character(min_u + '0');
[e ( _LCD_Write_Character (1 -> + -> _min_u `ui -> 48 `ui `uc ]
"150
[; ;Master_main.c: 150: }
[e :UE 154 ]
}
[a 2C 48 120 0 ]
[a 1C 83 49 58 32 32 83 50 58 32 32 32 83 51 58 0 ]
